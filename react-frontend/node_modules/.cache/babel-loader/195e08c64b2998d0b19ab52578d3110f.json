{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valzhanov\\\\Desktop\\\\test\\\\Spring-backend\\\\src\\\\main\\\\resources\\\\react-frontend\\\\src\\\\components\\\\CreateComment.js\";\nimport React, { Component } from 'react';\nimport { Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { SaveComment, ViewIssue } from \"../redux/actions\";\nimport { maxLengthCreator, required } from \"../validations/validatiors\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { renderField } from \"../validations/renderField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateComment extends Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //     id: \"\",\n    //     status: \"\",\n    //     text: \"\",\n    //     author: \"\",\n    //\n    // }\n    // this.changeStatusHandler = this.changeStatusHandler.bind(this)\n    // this.changeTextHandler = this.changeTextHandler.bind(this)\n    // this.changeAuthorHandler = this.changeAuthorHandler.bind(this)\n    // this.saveComment = this.saveComment.bind(this)\n    // console.log(this.props.id)\n  } // changeStatusHandler = (event) => {\n  //     this.setState({status: event.target.value})\n  // };\n  // changeTextHandler = (event) => {\n  //     this.setState({text: event.target.value})\n  // };\n  // changeAuthorHandler = (event) => {\n  //     this.setState({author: event.target.value})\n  // };\n  // saveComment = (e) => {\n  //     e.preventDefault();\n  //\n  //     let comment = {\n  //         author: this.state.author,\n  //         status: this.state.status,\n  //         text: this.state.text\n  //\n  //     }\n  //\n  //\n  //     this.props.SaveComment(this.props.id, comment);\n  //    this.props.employee.status=comment.status;\n  //\n  //    this.setState({author:\"\",status:\"\",text:\"\"})\n  // }\n\n\n  render() {\n    const onSubmit = formData => {\n      console.log(formData);\n      this.props.SaveComment(this.props.id, formData);\n      this.props.employee.status = formData.status;\n      formData.author = \"\";\n      formData.status = \"\";\n      formData.text = \"\";\n    };\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"col-md-6 offset-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(CommentReduxForm, {\n          onSubmit: onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = {\n  SaveComment,\n  ViewIssue\n};\n\nconst mapStateToProps = sate => ({\n  employee: sate.posts.employee\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateComment);\nconst maxLength = maxLengthCreator(30);\nconst maxDescriptions = maxLengthCreator(250);\n\nconst Form = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          component: renderField,\n          type: \"text\",\n          label: \"Author\",\n          name: \"author\",\n          validate: [required, maxLength]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          component: renderField,\n          type: \"text\",\n          label: \"Status\",\n          name: \"status\",\n          validate: [required, maxLength]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-2\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: renderField,\n        label: \"Text\",\n        name: \"text\",\n        validate: [required, maxDescriptions]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Form;\nconst CommentReduxForm = reduxForm({\n  form: 'Comment'\n})(Form);\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/Spring-backend/src/main/resources/react-frontend/src/components/CreateComment.js"],"names":["React","Component","Card","connect","SaveComment","ViewIssue","maxLengthCreator","required","Field","reduxForm","renderField","CreateComment","constructor","props","render","onSubmit","formData","console","log","id","employee","status","author","text","mapDispatchToProps","mapStateToProps","sate","posts","maxLength","maxDescriptions","Form","handleSubmit","CommentReduxForm","form"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Card} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {SaveComment, ViewIssue} from \"../redux/actions\";\r\nimport {maxLengthCreator, required} from \"../validations/validatiors\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {renderField} from \"../validations/renderField\";\r\n\r\nclass CreateComment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.state = {\r\n        //     id: \"\",\r\n        //     status: \"\",\r\n        //     text: \"\",\r\n        //     author: \"\",\r\n        //\r\n        // }\r\n\r\n\r\n        // this.changeStatusHandler = this.changeStatusHandler.bind(this)\r\n        // this.changeTextHandler = this.changeTextHandler.bind(this)\r\n        // this.changeAuthorHandler = this.changeAuthorHandler.bind(this)\r\n        // this.saveComment = this.saveComment.bind(this)\r\n\r\n        // console.log(this.props.id)\r\n    }\r\n\r\n\r\n    // changeStatusHandler = (event) => {\r\n    //     this.setState({status: event.target.value})\r\n    // };\r\n    // changeTextHandler = (event) => {\r\n    //     this.setState({text: event.target.value})\r\n    // };\r\n    // changeAuthorHandler = (event) => {\r\n    //     this.setState({author: event.target.value})\r\n    // };\r\n\r\n\r\n    // saveComment = (e) => {\r\n    //     e.preventDefault();\r\n    //\r\n    //     let comment = {\r\n    //         author: this.state.author,\r\n    //         status: this.state.status,\r\n    //         text: this.state.text\r\n    //\r\n    //     }\r\n    //\r\n    //\r\n    //     this.props.SaveComment(this.props.id, comment);\r\n    //    this.props.employee.status=comment.status;\r\n    //\r\n    //    this.setState({author:\"\",status:\"\",text:\"\"})\r\n    // }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const onSubmit = (formData) => {\r\n            console.log(formData)\r\n            this.props.SaveComment(this.props.id,formData);\r\n            this.props.employee.status=formData.status;\r\n            formData.author=\"\"\r\n            formData.status=\"\"\r\n            formData.text=\"\"\r\n        }\r\n        \r\n        return (\r\n            <Card className={\"col-md-6 offset-md-3\"}>\r\n                <h3 className={\"text-center\"}>Add Comment</h3>\r\n                <div className={\"card-body\"}>\r\n                    <CommentReduxForm onSubmit={onSubmit} />\r\n                </div>\r\n\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    SaveComment, ViewIssue\r\n}\r\n\r\nconst mapStateToProps = sate => ({\r\n    employee: sate.posts.employee\r\n\r\n\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateComment);\r\n\r\n\r\n\r\nconst maxLength=maxLengthCreator(30)\r\nconst maxDescriptions=maxLengthCreator(250)\r\n\r\nconst Form = (props) => {\r\n\r\n    return (\r\n        <form  onSubmit={props.handleSubmit}>\r\n            <div className={\"form-group\"}>\r\n                <div className={\"form-group mb-2\"}>\r\n\r\n                    <Field component={renderField} type={\"text\"} label={\"Author\"} name={\"author\"}\r\n                           validate={[required,maxLength]}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"form-group\"}>\r\n                <div className={\"form-group\"}>\r\n\r\n                    <Field component={renderField} type={\"text\"} label={\"Status\"} name={\"status\"}\r\n                           validate={[required,maxLength]}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"form-group mb-2\"}>\r\n\r\n                <Field component={renderField} label={\"Text\"} name={\"text\"}\r\n                       validate={[required,maxDescriptions]}\r\n                />\r\n            </div>\r\n\r\n\r\n            <button className={\"btn btn-success\"}>Save</button>\r\n\r\n        </form>\r\n\r\n   )\r\n}\r\n\r\nconst CommentReduxForm = reduxForm({form: 'Comment'})(Form)\r\n"]},"metadata":{},"sourceType":"module"}