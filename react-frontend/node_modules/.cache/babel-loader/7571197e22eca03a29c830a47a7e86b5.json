{"ast":null,"code":"import { DELETE, GET_ALL, POST, UPDATE, VIEW } from \"./types\";\nconst initialState = {\n  employees: [],\n  employee: []\n};\nexport const postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case POST:\n      return { ...state,\n        employees: state.employees.concat([action.payload])\n      };\n\n    case VIEW:\n      return { ...state,\n        employee: action.payload\n      };\n\n    case GET_ALL:\n      return { ...state,\n        employees: action.payload\n      };\n\n    case DELETE:\n      return { ...state,\n        employees: state.employees.filter(({\n          id\n        }) => id !== action.payload)\n      };\n\n    case UPDATE:\n      //return {...state,employees: state.employees.map((post))}\n      return { ...state,\n        employees: state.employees.map(employee => {\n          if (employee.id == action.payload) {\n            console.log(employee.id);\n            console.log(action.payload);\n            return { ...action.data\n            };\n          } else return employee;\n        })\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/react-frontend/src/redux/postsReducer.js"],"names":["DELETE","GET_ALL","POST","UPDATE","VIEW","initialState","employees","employee","postsReducer","state","action","type","concat","payload","filter","id","map","console","log","data"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,MAA/B,EAAuCC,IAAvC,QAAkD,SAAlD;AAGA,MAAMC,YAAY,GAAC;AAEfC,EAAAA,SAAS,EAAC,EAFK;AAKfC,EAAAA,QAAQ,EAAC;AALM,CAAnB;AAQA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAEJ,YAAR,EAAsBK,MAAtB,KAAiC;AAGzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,IAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAUH,QAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,CAAgBM,MAAhB,CAAuB,CAACF,MAAM,CAACG,OAAR,CAAvB;AAArB,OAAP;;AAEJ,SAAKT,IAAL;AACI,aAAO,EAAC,GAAGK,KAAJ;AAAUF,QAAAA,QAAQ,EAACG,MAAM,CAACG;AAA1B,OAAP;;AAEJ,SAAKZ,OAAL;AACI,aAAO,EAAC,GAAGQ,KAAJ;AAAUH,QAAAA,SAAS,EAAEI,MAAM,CAACG;AAA5B,OAAP;;AAEJ,SAAKb,MAAL;AACI,aAAO,EAAC,GAAGS,KAAJ;AAAUH,QAAAA,SAAS,EAACG,KAAK,CAACH,SAAN,CAAgBQ,MAAhB,CAAuB,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAYA,EAAE,KAAKL,MAAM,CAACG,OAAjD;AAApB,OAAP;;AAGJ,SAAKV,MAAL;AACQ;AACA,aAAO,EAAC,GAAGM,KAAJ;AAAUH,QAAAA,SAAS,EAACG,KAAK,CAACH,SAAN,CAAgBU,GAAhB,CAAqBT,QAAD,IAAY;AAEnD,cAAGA,QAAQ,CAACQ,EAAT,IAAeL,MAAM,CAACG,OAAzB,EAAkC;AAC9BI,YAAAA,OAAO,CAACC,GAAR,CAAaX,QAAQ,CAACQ,EAAtB;AACAE,YAAAA,OAAO,CAACC,GAAR,CAAaR,MAAM,CAACG,OAApB;AACA,mBAAO,EACL,GAAGH,MAAM,CAACS;AADL,aAAP;AAGH,WAND,MAMO,OAAOZ,QAAP;AACV,SATsB;AAApB,OAAP;;AAUR;AAAQ,aAAOE,KAAP;AA1BZ;AA4BH,CA/BM","sourcesContent":["import {DELETE, GET_ALL, POST, UPDATE, VIEW} from \"./types\";\r\n\r\n\r\nconst initialState={\r\n\r\n    employees:[\r\n\r\n    ],\r\n    employee:[\r\n    ]\r\n}\r\nexport const postsReducer = (state= initialState, action) => {\r\n\r\n\r\n    switch (action.type){\r\n        case POST:\r\n            return {...state,employees: state.employees.concat([action.payload])}\r\n\r\n        case VIEW:\r\n            return {...state,employee:action.payload }\r\n\r\n        case GET_ALL:\r\n            return {...state,employees: action.payload}\r\n\r\n        case DELETE:\r\n            return {...state,employees:state.employees.filter(({ id }) => id !== action.payload)};\r\n\r\n\r\n        case UPDATE :\r\n                //return {...state,employees: state.employees.map((post))}\r\n                return {...state,employees:state.employees.map((employee)=>{\r\n\r\n                        if(employee.id == action.payload) {\r\n                            console.log( employee.id)\r\n                            console.log( action.payload)\r\n                            return {\r\n                              ...action.data\r\n                            }\r\n                        } else return employee;\r\n                    })}\r\n        default:return state\r\n    }\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}