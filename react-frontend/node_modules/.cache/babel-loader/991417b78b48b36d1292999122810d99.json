{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valzhanov\\\\Desktop\\\\test\\\\Spring-backend\\\\src\\\\main\\\\resources\\\\react-frontend\\\\src\\\\components\\\\CreateComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { Card } from \"react-bootstrap\";\nimport { connect, useSelector } from \"react-redux\";\nimport { SaveComment } from \"../redux/actions\";\nimport { maxLengthCreator, required } from \"../validations/validatiors\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { renderField, renderFieldTextarea } from \"../validations/renderField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateComment extends Component {\n  // changeStatusHandler = (event) => {\n  //     this.setState({status: event.target.value})\n  // };\n  // changeTextHandler = (event) => {\n  //     this.setState({text: event.target.value})\n  // };\n  // changeAuthorHandler = (event) => {\n  //     this.setState({author: event.target.value})\n  // };\n  // saveComment = (e) => {\n  //     e.preventDefault();\n  //\n  //     let comment = {\n  //         author: this.state.author,\n  //         status: this.state.status,\n  //         text: this.state.text\n  //\n  //     }\n  //\n  //\n  //     this.props.SaveComment(this.props.id, comment);\n  //    this.props.employee.status=comment.status;\n  //\n  //    this.setState({author:\"\",status:\"\",text:\"\"})\n  // }\n  render() {\n    const onSubmit = formData => {\n      formData.author = this.props.user.name;\n      console.log(formData);\n      this.props.SaveComment(this.props.id, formData);\n      this.props.employee.status = formData.status;\n    };\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"col-md-6 offset-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(CommentReduxForm, {\n          onSubmit: onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = {\n  SaveComment\n};\n\nconst mapStateToProps = sate => ({\n  employee: sate.posts.employee,\n  user: sate.users.user\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateComment);\nconst maxLength = maxLengthCreator(30);\nconst maxDescriptions = maxLengthCreator(250);\n\nconst Form = props => {\n  _s();\n\n  // console.log(this.state.user);\n  const user = useSelector(state => {\n    return state.users.user;\n  });\n  console.log(user);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Author: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          component: renderField,\n          type: \"text\",\n          label: \"Status\",\n          name: \"status\",\n          validate: [required, maxLength]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-2\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: renderFieldTextarea,\n        label: \"Descriptions\",\n        name: \"descriptions\",\n        validate: [required, maxDescriptions]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"ODc3cjw/vvoWaLFqHWcEGODyOfo=\", false, function () {\n  return [useSelector];\n});\n\n_c = Form;\nconst CommentReduxForm = reduxForm({\n  form: 'Comment'\n})(Form);\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/Spring-backend/src/main/resources/react-frontend/src/components/CreateComment.js"],"names":["React","Component","Card","connect","useSelector","SaveComment","maxLengthCreator","required","Field","reduxForm","renderField","renderFieldTextarea","CreateComment","render","onSubmit","formData","author","props","user","name","console","log","id","employee","status","mapDispatchToProps","mapStateToProps","sate","posts","users","maxLength","maxDescriptions","Form","state","handleSubmit","CommentReduxForm","form"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Card} from \"react-bootstrap\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {SaveComment} from \"../redux/actions\";\r\nimport {maxLengthCreator, required} from \"../validations/validatiors\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {renderField, renderFieldTextarea} from \"../validations/renderField\";\r\n\r\nclass CreateComment extends Component {\r\n\r\n\r\n    // changeStatusHandler = (event) => {\r\n    //     this.setState({status: event.target.value})\r\n    // };\r\n    // changeTextHandler = (event) => {\r\n    //     this.setState({text: event.target.value})\r\n    // };\r\n    // changeAuthorHandler = (event) => {\r\n    //     this.setState({author: event.target.value})\r\n    // };\r\n\r\n\r\n    // saveComment = (e) => {\r\n    //     e.preventDefault();\r\n    //\r\n    //     let comment = {\r\n    //         author: this.state.author,\r\n    //         status: this.state.status,\r\n    //         text: this.state.text\r\n    //\r\n    //     }\r\n    //\r\n    //\r\n    //     this.props.SaveComment(this.props.id, comment);\r\n    //    this.props.employee.status=comment.status;\r\n    //\r\n    //    this.setState({author:\"\",status:\"\",text:\"\"})\r\n    // }\r\n\r\n\r\n    render() {\r\n        const onSubmit = (formData) => {\r\n            formData.author = this.props.user.name\r\n            console.log(formData)\r\n            this.props.SaveComment(this.props.id, formData);\r\n            this.props.employee.status = formData.status;\r\n        }\r\n\r\n\r\n        return (\r\n            <Card className={\"col-md-6 offset-md-3\"}>\r\n                <h3 className={\"text-center\"}>Add Comment</h3>\r\n                <div className={\"card-body\"}>\r\n                    <CommentReduxForm onSubmit={onSubmit}/>\r\n                </div>\r\n\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    SaveComment\r\n}\r\n\r\nconst mapStateToProps = sate => ({\r\n    employee: sate.posts.employee,\r\n    user: sate.users.user\r\n\r\n\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateComment);\r\n\r\n\r\nconst maxLength = maxLengthCreator(30)\r\nconst maxDescriptions = maxLengthCreator(250)\r\n\r\nconst Form = (props) => {\r\n    // console.log(this.state.user);\r\n    const user = useSelector(state => {\r\n        return state.users.user\r\n    })\r\n    console.log(user)\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={\"form-group\"}>\r\n                <div className={\"form-group mb-2\"}>\r\n                    <label>Author: {user.name}</label>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"form-group\"}>\r\n                <div className={\"form-group\"}>\r\n\r\n                    <Field component={renderField} type={\"text\"} label={\"Status\"} name={\"status\"}\r\n                           validate={[required, maxLength]}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"form-group mb-2\"}>\r\n\r\n                <Field component={renderFieldTextarea} label={\"Descriptions\"} name={\"descriptions\"}\r\n                       validate={[required, maxDescriptions]}\r\n                />\r\n            </div>\r\n\r\n\r\n            <button className={\"btn btn-success\"}>Save</button>\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nconst CommentReduxForm = reduxForm({form: 'Comment'})(Form)\r\n"]},"metadata":{},"sourceType":"module"}