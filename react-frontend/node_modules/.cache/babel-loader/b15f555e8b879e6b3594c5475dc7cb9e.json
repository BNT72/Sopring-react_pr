{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valzhanov\\\\Desktop\\\\test\\\\Spring-backend\\\\src\\\\main\\\\resources\\\\react-frontend\\\\src\\\\components\\\\CreateIssueComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { Card } from \"react-bootstrap\";\nimport { createIssue, fetchPosts } from \"../redux/actions\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../validations/validatiors\";\nimport { renderField, renderFieldTextarea } from \"../validations/renderField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateIssueComponent extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.cancel = () => {\n      this.props.history.push('/employees');\n    };\n  }\n\n  render() {\n    const onSubmit = formData => {\n      user: sate.users.user;\n\n      console.log(formData);\n      this.props.createIssue(formData);\n      this.props.history.push('/employees');\n      this.props.fetchPosts();\n    };\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"col-md-6 offset-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(IssueReduxForm, {\n          onSubmit: onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger m-2\",\n        onClick: this.cancel.bind(this),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = {\n  fetchPosts,\n  createIssue\n};\n\nconst mapStateToProps = sate => ({\n  user: sate.users.user\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateIssueComponent);\nconst maxLength = maxLengthCreator(30);\nconst maxDescriptions = maxLengthCreator(250);\n\nconst Form = props => {\n  _s();\n\n  const user = useSelector(state => {\n    return state.users.user;\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Author: \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: renderField,\n        type: \"text\",\n        label: \"Name\",\n        name: \"name\",\n        validate: [required, maxLength]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: renderField,\n        type: \"text\",\n        label: \"Status\",\n        name: \"status\",\n        validate: [required, maxLength]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-2\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: renderFieldTextarea,\n        type: \"text\",\n        label: \"Descriptions\",\n        name: \"descriptions\",\n        validate: [required, maxDescriptions]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Form, \"ODc3cjw/vvoWaLFqHWcEGODyOfo=\", false, function () {\n  return [useSelector];\n});\n\n_c = Form;\nconst IssueReduxForm = reduxForm({\n  form: 'Issue'\n})(Form);\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/Spring-backend/src/main/resources/react-frontend/src/components/CreateIssueComponent.js"],"names":["React","Component","Card","createIssue","fetchPosts","connect","useSelector","Field","reduxForm","maxLengthCreator","required","renderField","renderFieldTextarea","CreateIssueComponent","cancel","props","history","push","render","onSubmit","formData","user","sate","users","console","log","bind","mapDispatchToProps","mapStateToProps","maxLength","maxDescriptions","Form","state","handleSubmit","name","IssueReduxForm","form"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Card} from \"react-bootstrap\";\r\nimport {createIssue, fetchPosts} from \"../redux/actions\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../validations/validatiors\";\r\nimport {renderField, renderFieldTextarea} from \"../validations/renderField\";\r\n\r\nclass CreateIssueComponent extends Component {\r\n\r\n\r\n\r\n    cancel = () => {\r\n        this.props.history.push('/employees')\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const onSubmit = (formData) => {\r\n            user:sate.users.user\r\n            console.log(formData)\r\n            this.props.createIssue(formData);\r\n            this.props.history.push('/employees')\r\n            this.props.fetchPosts();\r\n        }\r\n\r\n        return (\r\n            <Card className={\"col-md-6 offset-md-3\"}>\r\n                <h3 className={\"text-center\"}>Add Employee</h3>\r\n                <div className={\"card-body\"}>\r\n                    <IssueReduxForm onSubmit={onSubmit}/>\r\n\r\n                </div>\r\n                <button className={\"btn btn-danger m-2\"}\r\n                        onClick={this.cancel.bind(this)}\r\n                >Cancel\r\n                </button>\r\n            </Card>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    fetchPosts, createIssue\r\n}\r\nconst mapStateToProps = sate => ({\r\n    \r\n    user:sate.users.user\r\n\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateIssueComponent);\r\n\r\n\r\n\r\n\r\n\r\nconst maxLength=maxLengthCreator(30)\r\nconst maxDescriptions=maxLengthCreator(250)\r\n\r\nconst Form = (props) => {\r\n    const user = useSelector(state => {\r\n        return state.users.user\r\n    })\r\n    return (<form onSubmit={props.handleSubmit}>\r\n\r\n\r\n            <div className={\"form-group mb-2\"}>\r\n                <label>Author: {user.name}</label>\r\n            </div>\r\n\r\n        <div className={\"form-group\"}>\r\n\r\n            <Field component={renderField} type={\"text\"} label={\"Name\"}  name={\"name\"}\r\n                   validate={[required,maxLength]}/>\r\n        </div>\r\n\r\n        <div className={\"form-group\"}>\r\n\r\n            <Field component={renderField} type={\"text\"} label={\"Status\"} name={\"status\"}\r\n                   validate={[required,maxLength]}\r\n            />\r\n        </div>\r\n\r\n        <div className={\"form-group mb-2\"}>\r\n\r\n            <Field component={renderFieldTextarea} type={\"text\"} label={\"Descriptions\"} name={\"descriptions\"}\r\n                   validate={[required,maxDescriptions]}\r\n            />\r\n        </div>\r\n\r\n\r\n\r\n\r\n    </form>)\r\n}\r\n\r\nconst IssueReduxForm = reduxForm({form: 'Issue'})(Form)"]},"metadata":{},"sourceType":"module"}