{"ast":null,"code":"import { DELETE, GET_ALL, POST, POSTCOMMENT, VIEW } from \"./types\";\nconst initialState = {\n  employees: [],\n  employee: [],\n  comments: []\n};\nexport const postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case POST:\n      return { ...state,\n        employees: state.employees.concat([action.payload])\n      };\n\n    case VIEW:\n      return { ...state,\n        employee: action.payload,\n        comments: action.payload.comments\n      };\n\n    case GET_ALL:\n      return { ...state,\n        employees: action.payload\n      };\n\n    case DELETE:\n      return { ...state,\n        employees: state.employees.filter(({\n          id\n        }) => id !== action.payload)\n      };\n    // case UPDATE :\n    //         //return {...state,employees: state.employees.map((post))}\n    //         return {...state,employees:state.employees.map((employee)=>{\n    //\n    //                 if(employee.id == action.payload) {\n    //                     console.log( employee.id)\n    //                     console.log( action.payload)\n    //                     return {\n    //                       ...action.data\n    //                     }\n    //                 } else return employee;\n    //             })}\n\n    case POSTCOMMENT:\n      {\n        action.payload.date = new Date().toLocaleDateString('es-CL');\n        return { ...state,\n          comments: state.comments.concat([action.payload])\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/Spring-backend/src/main/resources/react-frontend/src/redux/postsReducer.js"],"names":["DELETE","GET_ALL","POST","POSTCOMMENT","VIEW","initialState","employees","employee","comments","postsReducer","state","action","type","concat","payload","filter","id","date","Date","toLocaleDateString"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,WAA/B,EAA4CC,IAA5C,QAAuD,SAAvD;AAGA,MAAMC,YAAY,GAAG;AAEjBC,EAAAA,SAAS,EAAE,EAFM;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,QAAQ,EAAE;AAJO,CAArB;AAMA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAG1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,IAAL;AACI,aAAO,EAAC,GAAGQ,KAAJ;AAAWJ,QAAAA,SAAS,EAAEI,KAAK,CAACJ,SAAN,CAAgBO,MAAhB,CAAuB,CAACF,MAAM,CAACG,OAAR,CAAvB;AAAtB,OAAP;;AAEJ,SAAKV,IAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAWH,QAAAA,QAAQ,EAAEI,MAAM,CAACG,OAA5B;AAAqCN,QAAAA,QAAQ,EAAEG,MAAM,CAACG,OAAP,CAAeN;AAA9D,OAAP;;AAEJ,SAAKP,OAAL;AACI,aAAO,EAAC,GAAGS,KAAJ;AAAWJ,QAAAA,SAAS,EAAEK,MAAM,CAACG;AAA7B,OAAP;;AAEJ,SAAKd,MAAL;AACI,aAAO,EAAC,GAAGU,KAAJ;AAAWJ,QAAAA,SAAS,EAAEI,KAAK,CAACJ,SAAN,CAAgBS,MAAhB,CAAuB,CAAC;AAACC,UAAAA;AAAD,SAAD,KAAUA,EAAE,KAAKL,MAAM,CAACG,OAA/C;AAAtB,OAAP;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAKX,WAAL;AAAkB;AACdQ,QAAAA,MAAM,CAACG,OAAP,CAAeG,IAAf,GAAsB,IAAIC,IAAJ,GAAWC,kBAAX,CAA8B,OAA9B,CAAtB;AAEA,eAAO,EAAC,GAAGT,KAAJ;AAAWF,UAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeK,MAAf,CAAsB,CAACF,MAAM,CAACG,OAAR,CAAtB;AAArB,SAAP;AACH;;AACD;AACI,aAAOJ,KAAP;AAjCR;AAmCH,CAtCM","sourcesContent":["import {DELETE, GET_ALL, POST, POSTCOMMENT, VIEW} from \"./types\";\r\n\r\n\r\nconst initialState = {\r\n\r\n    employees: [],\r\n    employee: [],\r\n    comments: []\r\n}\r\nexport const postsReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case POST:\r\n            return {...state, employees: state.employees.concat([action.payload])}\r\n\r\n        case VIEW:\r\n            return {...state, employee: action.payload, comments: action.payload.comments}\r\n\r\n        case GET_ALL:\r\n            return {...state, employees: action.payload}\r\n\r\n        case DELETE:\r\n            return {...state, employees: state.employees.filter(({id}) => id !== action.payload)};\r\n\r\n\r\n        // case UPDATE :\r\n        //         //return {...state,employees: state.employees.map((post))}\r\n        //         return {...state,employees:state.employees.map((employee)=>{\r\n        //\r\n        //                 if(employee.id == action.payload) {\r\n        //                     console.log( employee.id)\r\n        //                     console.log( action.payload)\r\n        //                     return {\r\n        //                       ...action.data\r\n        //                     }\r\n        //                 } else return employee;\r\n        //             })}\r\n\r\n        case POSTCOMMENT: {\r\n            action.payload.date = new Date().toLocaleDateString('es-CL')\r\n\r\n            return {...state, comments: state.comments.concat([action.payload])}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}