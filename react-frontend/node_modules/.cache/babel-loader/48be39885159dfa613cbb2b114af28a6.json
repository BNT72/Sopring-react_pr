{"ast":null,"code":"import { DELETE, GET_ALL, POST, UPDATE } from \"./types\";\nconst initialState = {\n  employees: []\n};\nexport const postsReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (action.type) {\n    // case POST:\n    //     return {...state,posts: state.posts.concat([action.payload])}\n    case GET_ALL:\n      return { ...state,\n        employees: payload\n      };\n\n    case DELETE:\n      const {\n        index,\n        note\n      } = action;\n      const notes = [...state.notes];\n      notes[index] = note;\n      return {\n        notes\n      };\n    // return {...state,employees:state.employees.filter(({ id }) => id !== payload.id)};\n\n    case UPDATE:\n      return state.employees.map(employee => {\n        if (state.id === payload.id) {\n          return { ...employee,\n            ...payload\n          };\n        } else {\n          return employee;\n        }\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/react-frontend/src/redux/postsReducer.js"],"names":["DELETE","GET_ALL","POST","UPDATE","initialState","employees","postsReducer","state","action","type","payload","index","note","notes","map","employee","id"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,MAA/B,QAA4C,SAA5C;AAEA,MAAMC,YAAY,GAAC;AAEfC,EAAAA,SAAS,EAAC;AAFK,CAAnB;AAIA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAEH,YAAR,EAAsBI,MAAtB,KAAiC;AACzD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQA,MAAM,CAACC,IAAf;AACI;AACA;AAEA,SAAKR,OAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAUF,QAAAA,SAAS,EAAEK;AAArB,OAAP;;AAEJ,SAAKV,MAAL;AACI,YAAM;AAAEW,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBJ,MAAxB;AACA,YAAMK,KAAK,GAAG,CAAC,GAAGN,KAAK,CAACM,KAAV,CAAd;AACAA,MAAAA,KAAK,CAACF,KAAD,CAAL,GAAeC,IAAf;AACA,aAAO;AACHC,QAAAA;AADG,OAAP;AAGA;;AAIJ,SAAKV,MAAL;AACQ,aAAOI,KAAK,CAACF,SAAN,CAAgBS,GAAhB,CAAqBC,QAAD,IAAc;AACrC,YAAIR,KAAK,CAACS,EAAN,KAAaN,OAAO,CAACM,EAAzB,EAA6B;AACzB,iBAAO,EACH,GAAGD,QADA;AAEH,eAAGL;AAFA,WAAP;AAIH,SALD,MAKO;AACH,iBAAOK,QAAP;AACH;AACJ,OATM,CAAP;;AAUR;AAAQ,aAAOR,KAAP;AA7BZ;AA+BH,CAlCM","sourcesContent":["import {DELETE, GET_ALL, POST, UPDATE} from \"./types\";\r\n\r\nconst initialState={\r\n\r\n    employees:[]\r\n}\r\nexport const postsReducer = (state= initialState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (action.type){\r\n        // case POST:\r\n        //     return {...state,posts: state.posts.concat([action.payload])}\r\n\r\n        case GET_ALL:\r\n            return {...state,employees: payload}\r\n\r\n        case DELETE:\r\n            const { index, note } = action;\r\n            const notes = [...state.notes];\r\n            notes[index] = note;\r\n            return {\r\n                notes\r\n            }\r\n            // return {...state,employees:state.employees.filter(({ id }) => id !== payload.id)};\r\n\r\n\r\n\r\n        case UPDATE :\r\n                return state.employees.map((employee) => {\r\n                    if (state.id === payload.id) {\r\n                        return {\r\n                            ...employee,\r\n                            ...payload,\r\n                        };\r\n                    } else {\r\n                        return employee;\r\n                    }\r\n                });\r\n        default:return state\r\n    }\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}