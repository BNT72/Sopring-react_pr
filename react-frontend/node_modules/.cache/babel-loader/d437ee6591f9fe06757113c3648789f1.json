{"ast":null,"code":"import { DELETE, GET_ALL, POST, UPDATE } from \"./types\";\nconst initialState = {\n  employees: []\n};\nexport const postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // case POST:\n    //     return {...state,posts: state.posts.concat([action.payload])}\n    case GET_ALL:\n      return { ...state,\n        employees: payload\n      };\n\n    case DELETE:\n      return { ...state,\n        employees: state.employees.filter(({\n          id\n        }) => id !== payload)\n      };\n\n    case UPDATE:\n      //return {...state,employees: state.employees.map((post))}\n      {\n        const {\n          type,\n          payload,\n          data\n        } = action;\n        return { ...state,\n          employees: state.employees.map(employee => {\n            if (employee.id === payload.id) {\n              employee.firstName = data.firstName;\n              employee.lastName = data.lastName;\n              employee.email = data.email;\n              return {\n                employee\n              };\n            } else return employee;\n          })\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/react-frontend/src/redux/postsReducer.js"],"names":["DELETE","GET_ALL","POST","UPDATE","initialState","employees","postsReducer","state","action","type","payload","filter","id","data","map","employee","firstName","lastName","email"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,MAA/B,QAA4C,SAA5C;AAGA,MAAMC,YAAY,GAAC;AAEfC,EAAAA,SAAS,EAAC;AAFK,CAAnB;AAMA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAEH,YAAR,EAAsBI,MAAtB,KAAiC;AAGzD,UAAQA,MAAM,CAACC,IAAf;AACI;AACA;AAEA,SAAKR,OAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAUF,QAAAA,SAAS,EAAEK;AAArB,OAAP;;AAEJ,SAAKV,MAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAUF,QAAAA,SAAS,EAACE,KAAK,CAACF,SAAN,CAAgBM,MAAhB,CAAuB,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAYA,EAAE,KAAKF,OAA1C;AAApB,OAAP;;AAGJ,SAAKP,MAAL;AACQ;AACR;AAAI,cAAM;AAAEM,UAAAA,IAAF;AAAQC,UAAAA,OAAR;AAAgBG,UAAAA;AAAhB,YAAyBL,MAA/B;AACA,eAAO,EACH,GAAGD,KADA;AACOF,UAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,GAAhB,CAAqBC,QAAD,IAAc;AACnD,gBAAIA,QAAQ,CAACH,EAAT,KAAgBF,OAAO,CAACE,EAA5B,EAAgC;AAC5BG,cAAAA,QAAQ,CAACC,SAAT,GAAqBH,IAAI,CAACG,SAA1B;AACAD,cAAAA,QAAQ,CAACE,QAAT,GAAoBJ,IAAI,CAACI,QAAzB;AACAF,cAAAA,QAAQ,CAACG,KAAT,GAAiBL,IAAI,CAACK,KAAtB;AACA,qBAAO;AACHH,gBAAAA;AADG,eAAP;AAGH,aAPD,MAOO,OAAOA,QAAP;AACV,WAToB;AADlB,SAAP;AAYH;;AACD;AAAQ,aAAOR,KAAP;AA3BZ;AA6BH,CAhCM","sourcesContent":["import {DELETE, GET_ALL, POST, UPDATE} from \"./types\";\r\n\r\n\r\nconst initialState={\r\n\r\n    employees:[\r\n\r\n    ]\r\n}\r\nexport const postsReducer = (state= initialState, action) => {\r\n\r\n\r\n    switch (action.type){\r\n        // case POST:\r\n        //     return {...state,posts: state.posts.concat([action.payload])}\r\n\r\n        case GET_ALL:\r\n            return {...state,employees: payload}\r\n\r\n        case DELETE:\r\n            return {...state,employees:state.employees.filter(({ id }) => id !== payload)};\r\n\r\n\r\n        case UPDATE :\r\n                //return {...state,employees: state.employees.map((post))}\r\n        {   const { type, payload,data } = action;\r\n            return {\r\n                ...state, employees: state.employees.map((employee) => {\r\n                    if (employee.id === payload.id) {\r\n                        employee.firstName = data.firstName\r\n                        employee.lastName = data.lastName\r\n                        employee.email = data.email\r\n                        return {\r\n                            employee\r\n                        }\r\n                    } else return employee;\r\n                })\r\n            }\r\n        }\r\n        default:return state\r\n    }\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}