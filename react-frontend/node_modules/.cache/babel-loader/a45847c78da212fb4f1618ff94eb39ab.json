{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valzhanov\\\\Desktop\\\\test\\\\Spring-backend\\\\src\\\\main\\\\resources\\\\react-frontend\\\\src\\\\components\\\\CreateIssueComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { Button, Card } from \"react-bootstrap\";\nimport { createIssue, fetchPosts } from \"../redux/actions\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../validations/validatiors\";\nimport { renderField, renderFieldTextarea } from \"../validations/renderField\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateIssueComponent extends Component {\n  // cancel = () => {\n  //     this.props.history.push('/employees')\n  // }\n  render() {\n    const onSubmit = formData => {\n      formData.author = this.props.user.name;\n      formData.status = \"Created\";\n      this.props.createIssue(formData);\n      this.props.history.push('/employees');\n      this.props.fetchPosts();\n    };\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"col-md-6 offset-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(IssueReduxForm, {\n          onSubmit: onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = {\n  fetchPosts,\n  createIssue\n};\n\nconst mapStateToProps = sate => ({\n  user: sate.users.user\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateIssueComponent);\nconst maxLength = maxLengthCreator(30);\nconst maxDescriptions = maxLengthCreator(250);\n\nconst Form = props => {\n  _s();\n\n  const user = useSelector(state => {\n    return state.users.user;\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Author: \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: renderField,\n        type: \"text\",\n        label: \"Name\",\n        name: \"name\",\n        validate: [required, maxLength]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-2\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: renderFieldTextarea,\n        type: \"text\",\n        label: \"Descriptions\",\n        name: \"descriptions\",\n        validate: [required, maxDescriptions]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success mr-1\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: '/'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger \",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Form, \"ODc3cjw/vvoWaLFqHWcEGODyOfo=\", false, function () {\n  return [useSelector];\n});\n\n_c = Form;\nconst IssueReduxForm = reduxForm({\n  form: 'Issue'\n})(Form);\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/Spring-backend/src/main/resources/react-frontend/src/components/CreateIssueComponent.js"],"names":["React","Component","Button","Card","createIssue","fetchPosts","connect","useSelector","Field","reduxForm","maxLengthCreator","required","renderField","renderFieldTextarea","Link","CreateIssueComponent","render","onSubmit","formData","author","props","user","name","status","history","push","mapDispatchToProps","mapStateToProps","sate","users","maxLength","maxDescriptions","Form","state","handleSubmit","pathname","IssueReduxForm","form"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button, Card} from \"react-bootstrap\";\r\nimport {createIssue, fetchPosts} from \"../redux/actions\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../validations/validatiors\";\r\nimport {renderField, renderFieldTextarea} from \"../validations/renderField\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass CreateIssueComponent extends Component {\r\n\r\n\r\n\r\n    // cancel = () => {\r\n    //     this.props.history.push('/employees')\r\n    // }\r\n\r\n\r\n    render() {\r\n\r\n        const onSubmit = (formData) => {\r\n            formData.author=this.props.user.name\r\n            formData.status=\"Created\"\r\n\r\n            this.props.createIssue(formData);\r\n            this.props.history.push('/employees')\r\n            this.props.fetchPosts();\r\n        }\r\n\r\n        return (\r\n            <Card className={\"col-md-6 offset-md-3\"}>\r\n                <h3 className={\"text-center\"}>Add Employee</h3>\r\n                <div className={\"card-body\"}>\r\n                    <IssueReduxForm onSubmit={onSubmit}/>\r\n\r\n\r\n                  {/*<button className={\"btn btn-danger mt-1\"} onClick={this.cancel.bind(this)}>Cancel</button>*/}\r\n                </div>\r\n\r\n            </Card>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    fetchPosts, createIssue\r\n}\r\nconst mapStateToProps = sate => ({\r\n\r\n    user:sate.users.user\r\n\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateIssueComponent);\r\n\r\n\r\n\r\n\r\n\r\nconst maxLength=maxLengthCreator(30)\r\nconst maxDescriptions=maxLengthCreator(250)\r\n\r\nconst Form = (props) => {\r\n    const user = useSelector(state => {\r\n        return state.users.user\r\n    })\r\n    return (<form onSubmit={props.handleSubmit}>\r\n\r\n\r\n            <div className={\"form-group mb-2\"}>\r\n                <label>Author: {user.name}</label>\r\n            </div>\r\n\r\n        <div className={\"form-group\"}>\r\n\r\n            <Field component={renderField} type={\"text\"} label={\"Name\"}  name={\"name\"}\r\n                   validate={[required,maxLength]}/>\r\n        </div>\r\n\r\n        <div className={\"form-group\"}>\r\n\r\n            {/*<Field component={renderField} type={\"text\"} label={\"Status\"} name={\"status\"}*/}\r\n            {/*       validate={[required,maxLength]}*/}\r\n            {/*/>*/}\r\n        </div>\r\n\r\n        <div className={\"form-group mb-2\"}>\r\n\r\n            <Field component={renderFieldTextarea} type={\"text\"} label={\"Descriptions\"} name={\"descriptions\"}\r\n                   validate={[required,maxDescriptions]}\r\n            />\r\n        </div>\r\n\r\n        <button className={\"btn btn-success mr-1\"}>Save</button>\r\n        <Link to={{pathname: '/'}}>\r\n            <button className={\"btn btn-danger \"}>Cancel</button>\r\n        </Link>\r\n\r\n\r\n    </form>)\r\n}\r\n\r\nconst IssueReduxForm = reduxForm({form: 'Issue'})(Form)"]},"metadata":{},"sourceType":"module"}