{"ast":null,"code":"import { DELETE, GET_ALL, GET_USER, POST, POSTCOMMENT, UPDATE, VIEW } from \"./types\";\nimport axios from \"axios\";\nconst EMPLOYEE_API_BASE_URL = \"/api/v1/employees\";\nexport const createEmployee = employee => async dispatch => {\n  try {\n    const res = await axios.post(EMPLOYEE_API_BASE_URL, employee);\n    await dispatch({\n      type: POST,\n      payload: employee\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const fetchPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(EMPLOYEE_API_BASE_URL);\n    await dispatch({\n      type: GET_ALL,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteEmployee = id => async dispatch => {\n  try {\n    await axios.delete(EMPLOYEE_API_BASE_URL + \"/\" + id);\n    await dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateEmployee = (id, data) => async dispatch => {\n  try {\n    // const res = await EmployeeService.updateEmployeeById(id, data);\n    const res = await axios.put(EMPLOYEE_API_BASE_URL + \"/\" + id, data);\n    await dispatch({\n      type: UPDATE,\n      payload: id,\n      data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const ViewEmployee = id => async dispatch => {\n  // try {\n  const res = await axios.get(EMPLOYEE_API_BASE_URL + \"/\" + id);\n  await dispatch({\n    type: VIEW,\n    payload: res.data\n  }); // } catch (err) {\n  //     console.log(err);\n  // }\n};\nexport const SaveComment = (id, comment) => async dispatch => {\n  await axios.post(EMPLOYEE_API_BASE_URL + \"/\" + id, comment);\n  let issue = await axios.get(EMPLOYEE_API_BASE_URL + \"/\" + id);\n  issue.status = comment.status;\n  await dispatch({\n    type: POSTCOMMENT,\n    payload: comment,\n    issue\n  });\n};\nexport const GetUser = () => async dispatch => {\n  const user = await axios.get(\"/acc\");\n  await dispatch({\n    type: GET_USER,\n    payload: user.data\n  });\n};","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/Spring-backend/src/main/resources/react-frontend/src/redux/actions.js"],"names":["DELETE","GET_ALL","GET_USER","POST","POSTCOMMENT","UPDATE","VIEW","axios","EMPLOYEE_API_BASE_URL","createEmployee","employee","dispatch","res","post","type","payload","err","console","log","fetchPosts","get","data","deleteEmployee","id","delete","updateEmployee","put","Promise","resolve","reject","ViewEmployee","SaveComment","comment","issue","status","GetUser","user"],"mappings":"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","sourcesContent":["import {DELETE, GET_ALL, GET_USER, POST, POSTCOMMENT, UPDATE, VIEW} from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nconst EMPLOYEE_API_BASE_URL = \"/api/v1/employees\"\r\n\r\n\r\nexport const createEmployee = (employee) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.post(EMPLOYEE_API_BASE_URL, employee);\r\n\r\n        await dispatch({\r\n            type: POST,\r\n            payload: employee,\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const fetchPosts = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(EMPLOYEE_API_BASE_URL);\r\n\r\n\r\n        await  dispatch({\r\n            type: GET_ALL,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\n\r\nexport const deleteEmployee = (id) => async (dispatch) => {\r\n\r\n    try {\r\n        await axios.delete(EMPLOYEE_API_BASE_URL + \"/\" + id);\r\n\r\n        await   dispatch({\r\n            type: DELETE,\r\n            payload: id\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const updateEmployee = (id, data) => async (dispatch) => {\r\n    try {\r\n        // const res = await EmployeeService.updateEmployeeById(id, data);\r\n\r\n        const res = await  axios.put(EMPLOYEE_API_BASE_URL + \"/\" + id, data)\r\n\r\n\r\n        await  dispatch({\r\n            type: UPDATE,\r\n            payload: id, data\r\n        });\r\n\r\n        return Promise.resolve(res.data);\r\n    } catch (err) {\r\n        return Promise.reject(err);\r\n    }\r\n};\r\n\r\nexport const ViewEmployee = (id) => async (dispatch) => {\r\n\r\n    // try {\r\n    const res = await axios.get(EMPLOYEE_API_BASE_URL + \"/\" + id);\r\n\r\n    await dispatch({\r\n        type: VIEW,\r\n        payload: res.data\r\n    });\r\n    // } catch (err) {\r\n    //     console.log(err);\r\n    // }\r\n\r\n\r\n}\r\n\r\nexport const SaveComment = (id, comment) => async (dispatch) => {\r\n    await axios.post(EMPLOYEE_API_BASE_URL + \"/\" + id, comment);\r\n\r\n    let issue =await axios.get(EMPLOYEE_API_BASE_URL + \"/\" + id);\r\n\r\n    issue.status=comment.status;\r\n\r\n    await dispatch({\r\n        type: POSTCOMMENT,\r\n        payload: comment,issue\r\n    });\r\n}\r\n\r\nexport const GetUser = () => async (dispatch) => {\r\n    const user= await axios.get( \"/acc\");\r\n\r\n\r\n    await dispatch({\r\n        type: GET_USER,\r\n        payload: user.data\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}