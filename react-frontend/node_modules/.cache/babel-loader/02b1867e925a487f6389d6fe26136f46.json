{"ast":null,"code":"import { DELETE, GET_ALL, POST, POSTCOMMENT, UPDATE, VIEW } from \"./types\";\nimport EmployeeService from \"../services/EmployeeService\";\nimport axios from \"axios\";\nconst EMPLOYEE_API_BASE_URL = \"http://localhost:8081/api/v1/employees\";\nexport const createEmployee = employee => async dispatch => {\n  try {\n    const res = await EmployeeService.createEmployee(employee);\n    dispatch({\n      type: POST,\n      payload: employee\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const fetchPosts = () => async dispatch => {\n  try {\n    let res = axios.get(EMPLOYEE_API_BASE_URL);\n    dispatch({\n      type: GET_ALL,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteEmployee = id => async dispatch => {\n  try {\n    await EmployeeService.deleteEmployee(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateEmployee = (id, data) => async dispatch => {\n  try {\n    // const res = await EmployeeService.updateEmployeeById(id, data);\n    const res = EmployeeService.updateEmployeeById(id, data);\n    dispatch({\n      type: UPDATE,\n      payload: id,\n      data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const ViewEmployee = id => async dispatch => {\n  // try {\n  const res = await EmployeeService.getEmployeeById(id);\n  dispatch({\n    type: VIEW,\n    payload: res.data\n  }); // } catch (err) {\n  //     console.log(err);\n  // }\n};\nexport const SaveComment = (id, comment) => async dispatch => {\n  await EmployeeService.createComment(id, comment);\n  dispatch({\n    type: POSTCOMMENT,\n    payload: comment\n  });\n};","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/react-frontend/src/redux/actions.js"],"names":["DELETE","GET_ALL","POST","POSTCOMMENT","UPDATE","VIEW","EmployeeService","axios","EMPLOYEE_API_BASE_URL","createEmployee","employee","dispatch","res","type","payload","err","console","log","fetchPosts","get","data","deleteEmployee","id","updateEmployee","updateEmployeeById","Promise","resolve","reject","ViewEmployee","getEmployeeById","SaveComment","comment","createComment"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,WAA/B,EAA4CC,MAA5C,EAAoDC,IAApD,QAA+D,SAA/D;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,qBAAqB,GAAC,wCAA5B;AAGA,OAAO,MAAMC,cAAc,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAC5D,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMN,eAAe,CAACG,cAAhB,CAA+BC,QAA/B,CAAlB;AAEAC,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEX,IADD;AAELY,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOK,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CAXM;AAaP,OAAO,MAAMG,UAAU,GAAG,MAAM,MAAOP,QAAP,IAAoB;AAChD,MAAI;AACA,QAAIC,GAAG,GAAEL,KAAK,CAACY,GAAN,CAAUX,qBAAV,CAAT;AAEAG,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEZ,OADD;AAELa,MAAAA,OAAO,EAAEF,GAAG,CAACQ;AAFR,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOL,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CAXM;AAcP,OAAO,MAAMM,cAAc,GAAIC,EAAD,IAAQ,MAAOX,QAAP,IAAoB;AAEtD,MAAI;AACA,UAAML,eAAe,CAACe,cAAhB,CAA+BC,EAA/B,CAAN;AAEAX,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEb,MADD;AAELc,MAAAA,OAAO,EAAEQ;AAFJ,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOP,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AAGJ,CAdM;AAgBP,OAAO,MAAMQ,cAAc,GAAG,CAACD,EAAD,EAAKF,IAAL,KAAc,MAAOT,QAAP,IAAoB;AAC5D,MAAI;AACA;AAEA,UAAMC,GAAG,GAAGN,eAAe,CAACkB,kBAAhB,CAAmCF,EAAnC,EAAuCF,IAAvC,CAAZ;AAGAT,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAET,MADD;AAELU,MAAAA,OAAO,EAAEQ,EAFJ;AAEQF,MAAAA;AAFR,KAAD,CAAR;AAKA,WAAOK,OAAO,CAACC,OAAR,CAAgBd,GAAG,CAACQ,IAApB,CAAP;AACH,GAZD,CAYE,OAAOL,GAAP,EAAY;AACV,WAAOU,OAAO,CAACE,MAAR,CAAeZ,GAAf,CAAP;AACH;AACJ,CAhBM;AAkBP,OAAO,MAAMa,YAAY,GAAIN,EAAD,IAAQ,MAAOX,QAAP,IAAoB;AAEpD;AACI,QAAMC,GAAG,GAAG,MAAMN,eAAe,CAACuB,eAAhB,CAAgCP,EAAhC,CAAlB;AAEAX,EAAAA,QAAQ,CAAC;AACLE,IAAAA,IAAI,EAAER,IADD;AAELS,IAAAA,OAAO,EAAEF,GAAG,CAACQ;AAFR,GAAD,CAAR,CALgD,CASpD;AACA;AACA;AAGH,CAdM;AAgBP,OAAO,MAAMU,WAAW,GAAC,CAACR,EAAD,EAAIS,OAAJ,KAAc,MAAOpB,QAAP,IAAkB;AACrD,QAAML,eAAe,CAAC0B,aAAhB,CAA8BV,EAA9B,EAAiCS,OAAjC,CAAN;AAEApB,EAAAA,QAAQ,CAAC;AACLE,IAAAA,IAAI,EAAEV,WADD;AAELW,IAAAA,OAAO,EAAEiB;AAFJ,GAAD,CAAR;AAIH,CAPM","sourcesContent":["import {DELETE, GET_ALL, POST, POSTCOMMENT, UPDATE, VIEW} from \"./types\";\r\nimport EmployeeService from \"../services/EmployeeService\";\r\nimport axios from \"axios\";\r\n\r\nconst EMPLOYEE_API_BASE_URL=\"http://localhost:8081/api/v1/employees\"\r\n\r\n\r\nexport const createEmployee = (employee) => async (dispatch) => {\r\n    try {\r\n        const res = await EmployeeService.createEmployee(employee);\r\n\r\n        dispatch({\r\n            type: POST,\r\n            payload: employee,\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const fetchPosts = () => async (dispatch) => {\r\n    try {\r\n        let res= axios.get(EMPLOYEE_API_BASE_URL);\r\n\r\n        dispatch({\r\n            type: GET_ALL,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\n\r\nexport const deleteEmployee = (id) => async (dispatch) => {\r\n\r\n    try {\r\n        await EmployeeService.deleteEmployee(id);\r\n\r\n        dispatch({\r\n            type: DELETE,\r\n            payload: id\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const updateEmployee = (id, data) => async (dispatch) => {\r\n    try {\r\n        // const res = await EmployeeService.updateEmployeeById(id, data);\r\n\r\n        const res = EmployeeService.updateEmployeeById(id, data)\r\n\r\n\r\n        dispatch({\r\n            type: UPDATE,\r\n            payload: id, data\r\n        });\r\n\r\n        return Promise.resolve(res.data);\r\n    } catch (err) {\r\n        return Promise.reject(err);\r\n    }\r\n};\r\n\r\nexport const ViewEmployee = (id) => async (dispatch) => {\r\n\r\n    // try {\r\n        const res = await EmployeeService.getEmployeeById(id);\r\n\r\n        dispatch({\r\n            type: VIEW,\r\n            payload: res.data\r\n        });\r\n    // } catch (err) {\r\n    //     console.log(err);\r\n    // }\r\n\r\n\r\n}\r\n\r\nexport const SaveComment=(id,comment)=>async (dispatch)=>{\r\n    await EmployeeService.createComment(id,comment);\r\n\r\n    dispatch({\r\n        type: POSTCOMMENT,\r\n        payload: comment\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}