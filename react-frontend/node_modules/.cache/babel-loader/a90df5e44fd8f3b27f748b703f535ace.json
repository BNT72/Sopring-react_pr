{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valzhanov\\\\Desktop\\\\test\\\\Spring-backend\\\\src\\\\main\\\\resources\\\\react-frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Container } from \"react-bootstrap\";\nimport ListIssueComponent from \"./components/ListIssueComponent\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CreateIssueComponent from \"./components/CreateIssueComponent\";\nimport ViewIssueComponent from \"./components/ViewIssueComponent\";\nimport { GetUser } from \"./redux/actions\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  dispatch(GetUser());\n  console.log(this.props.user);\n\n  if (!this.props.user.id) {\n    // Супер костыль //\n    // Авторизация проходит только на порту 8081, если пользователь не авторизован появляеться ссылка на порт спринга\n    //  где проходит авторизация и в дальнейшем редиректит обратно на порт 3000\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"http://localhost:8081/back\",\n      children: \" Hello user! You need to log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 18\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              exact: true,\n              component: ListIssueComponent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/employees\",\n              component: ListIssueComponent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/add-employee/:id\",\n              component: CreateIssueComponent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/view-employee/:id\",\n              component: ViewIssueComponent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s(App, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/Spring-backend/src/main/resources/react-frontend/src/App.js"],"names":["BrowserRouter","Router","Route","Switch","Container","ListIssueComponent","useDispatch","useSelector","CreateIssueComponent","ViewIssueComponent","GetUser","React","App","dispatch","console","log","props","user","id"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAqD,kBAArD;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEIO,EAAAA,QAAQ,CAACH,OAAO,EAAR,CAAR;AAGJI,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,IAAvB;;AAEA,MAAG,CAAC,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,EAApB,EACA;AACI;AACA;AACA;AACA,wBAAS;AAAG,MAAA,IAAI,EAAE,4BAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AACH,GAND,MAOK;AAED,wBACI;AAAA,6BACI,QAAC,MAAD;AAAA,+BAGI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAE,MAAtB;AAAA,iCACI,QAAC,MAAD;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,GAAZ;AAAgB,cAAA,KAAK,MAArB;AAAsB,cAAA,SAAS,EAAEb;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,YAAZ;AAAyB,cAAA,SAAS,EAAEA;AAApC;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,mBAAZ;AAAgC,cAAA,SAAS,EAAEG;AAA3C;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,oBAAZ;AAAiC,cAAA,SAAS,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAkBH;AACJ;;GApCQG,G;UACYN,W;;;KADZM,G;AAsCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport {Container} from \"react-bootstrap\";\nimport ListIssueComponent from \"./components/ListIssueComponent\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport CreateIssueComponent from \"./components/CreateIssueComponent\";\nimport ViewIssueComponent from \"./components/ViewIssueComponent\";\nimport {GetUser} from \"./redux/actions\";\nimport React from \"react\";\n\nfunction App() {\n    const dispatch = useDispatch()\n\n        dispatch(GetUser());\n\n\n    console.log(this.props.user)\n\n    if(!this.props.user.id)\n    {\n        // Супер костыль //\n        // Авторизация проходит только на порту 8081, если пользователь не авторизован появляеться ссылка на порт спринга\n        //  где проходит авторизация и в дальнейшем редиректит обратно на порт 3000\n        return  (<a href={\"http://localhost:8081/back\"}> Hello user! You need to log in</a>)\n    }\n    else {\n\n        return (\n            <>\n                <Router>\n\n\n                    <Container className={\"mt-3\"}>\n                        <Switch>\n                            <Route path=\"/\" exact component={ListIssueComponent}/>\n                            <Route path=\"/employees\" component={ListIssueComponent}/>\n                            <Route path=\"/add-employee/:id\" component={CreateIssueComponent}/>\n                            <Route path=\"/view-employee/:id\" component={ViewIssueComponent}/>\n                        </Switch>\n                    </Container>\n\n\n                </Router>\n            </>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}