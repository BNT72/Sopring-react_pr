{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valzhanov\\\\Desktop\\\\test\\\\Spring-backend\\\\src\\\\main\\\\webapp\\\\WEB-INF\\\\react-frontend\\\\src\\\\Form.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (!this.state.errcount) {\n        const data = new FormData(this.form);\n        fetch(this.form.action, {\n          method: this.form.method,\n          body: new URLSearchParams(data)\n        }).then(v => {\n          if (v.redirected) window.location = v.url;\n        }).catch(e => console.warn(e));\n      }\n    };\n\n    this.handleError = (field, errmsg) => {\n      if (!field) return;\n\n      if (errmsg) {\n        this.setState(prevState => ({\n          failure: '',\n          errcount: prevState.errcount + 1,\n          errmsgs: { ...prevState.errmsgs,\n            [field]: errmsg\n          }\n        }));\n      } else {\n        this.setState(prevState => ({\n          failure: '',\n          errcount: prevState.errcount === 1 ? 0 : prevState.errcount - 1,\n          errmsgs: { ...prevState.errmsgs,\n            [field]: ''\n          }\n        }));\n      }\n    };\n\n    this.renderError = () => {\n      if (this.state.errcount || this.state.failure) {\n        const errmsg = this.state.failure || Object.values(this.state.errmsgs).find(v => v);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errmsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    if (props.error) {\n      this.state = {\n        failure: 'wrong username or password!',\n        errcount: 0\n      };\n    } else {\n      this.state = {\n        errcount: 0\n      };\n    }\n  }\n\n  render() {\n    const inputs = this.props.inputs.map(({\n      name,\n      placeholder,\n      type,\n      value,\n      className\n    }, index) => /*#__PURE__*/_jsxDEV(Input, {\n      name: name,\n      placeholder: placeholder,\n      type: type,\n      value: value,\n      className: type === 'submit' ? className : '',\n      handleError: this.handleError\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this));\n    const errors = this.renderError();\n    return /*#__PURE__*/_jsxDEV(\"form\", { ...this.props,\n      onSubmit: this.handleSubmit,\n      ref: fm => {\n        this.form = fm;\n      },\n      children: [inputs, errors]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nForm.propTypes = {\n  name: PropTypes.string,\n  action: PropTypes.string,\n  method: PropTypes.string,\n  inputs: PropTypes.array,\n  error: PropTypes.string\n};\nexport default Form;","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/Spring-backend/src/main/webapp/WEB-INF/react-frontend/src/Form.js"],"names":["React","Component","PropTypes","Input","Form","constructor","props","handleSubmit","event","preventDefault","state","errcount","data","FormData","form","fetch","action","method","body","URLSearchParams","then","v","redirected","window","location","url","catch","e","console","warn","handleError","field","errmsg","setState","prevState","failure","errmsgs","renderError","Object","values","find","error","render","inputs","map","name","placeholder","type","value","className","index","errors","fm","propTypes","string","array"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Input from './Input'\r\n\r\nclass Form extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        if(props.error) {\r\n            this.state = {\r\n                failure: 'wrong username or password!',\r\n                errcount: 0\r\n            }\r\n        } else {\r\n            this.state = { errcount: 0 }\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if(!this.state.errcount) {\r\n            const data = new FormData(this.form)\r\n            fetch(this.form.action, {\r\n                method: this.form.method,\r\n                body: new URLSearchParams(data)\r\n            })\r\n                .then(v => {\r\n                    if(v.redirected) window.location = v.url\r\n                })\r\n                .catch(e => console.warn(e))\r\n        }\r\n    }\r\n\r\n    handleError = (field, errmsg) => {\r\n        if(!field) return\r\n\r\n        if(errmsg) {\r\n            this.setState((prevState) => ({\r\n                failure: '',\r\n                errcount: prevState.errcount + 1,\r\n                errmsgs: {...prevState.errmsgs, [field]: errmsg}\r\n            }))\r\n        } else {\r\n            this.setState((prevState) => ({\r\n                failure: '',\r\n                errcount: prevState.errcount===1? 0 : prevState.errcount-1,\r\n                errmsgs: {...prevState.errmsgs, [field]: ''}\r\n            }))\r\n        }\r\n    }\r\n\r\n    renderError = () => {\r\n        if(this.state.errcount || this.state.failure) {\r\n            const errmsg = this.state.failure\r\n                || Object.values(this.state.errmsgs).find(v=>v)\r\n            return <div className=\"error\">{errmsg}</div>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const inputs = this.props.inputs.map(\r\n            ({name, placeholder, type, value, className}, index) => (\r\n                <Input key={index} name={name} placeholder={placeholder} type={type} value={value}\r\n                       className={type==='submit'? className : ''} handleError={this.handleError} />\r\n            )\r\n        )\r\n        const errors = this.renderError()\r\n        return (\r\n            <form {...this.props} onSubmit={this.handleSubmit} ref={fm => {this.form=fm}} >\r\n                {inputs}\r\n                {errors}\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nForm.propTypes = {\r\n    name: PropTypes.string,\r\n    action: PropTypes.string,\r\n    method: PropTypes.string,\r\n    inputs: PropTypes.array,\r\n    error: PropTypes.string\r\n}\r\n\r\nexport default Form\r\n\r\n"]},"metadata":{},"sourceType":"module"}