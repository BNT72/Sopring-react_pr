{"ast":null,"code":"import { DELETE, GET_ALL, POST, UPDATE } from \"./types\";\nconst initialState = {\n  employees: []\n};\nexport const postsReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (action.type) {\n    // case POST:\n    //     return {...state,posts: state.posts.concat([action.payload])}\n    case GET_ALL:\n      return { ...state,\n        employees: payload\n      };\n\n    case DELETE:\n      return { ...state,\n        employees: employees.filter(({\n          id\n        }) => id !== payload.id)\n      };\n    // EmployeeService.deleteEmployee(id).then(res=>{\n    //     this.setState({employees:this.state.employees.filter(employee=>employee.id!==id)})\n    // });\n    //\n\n    case UPDATE:\n      return state.map(tutorial => {\n        if (state.id === payload.id) {\n          return { ...tutorial,\n            ...payload\n          };\n        } else {\n          return tutorial;\n        }\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/react-frontend/src/redux/postsReducer.js"],"names":["DELETE","GET_ALL","POST","UPDATE","initialState","employees","postsReducer","state","action","type","payload","filter","id","map","tutorial"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,MAA/B,QAA4C,SAA5C;AAEA,MAAMC,YAAY,GAAC;AAEfC,EAAAA,SAAS,EAAC;AAFK,CAAnB;AAIA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAEH,YAAR,EAAsBI,MAAtB,KAAiC;AACzD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQA,MAAM,CAACC,IAAf;AACI;AACA;AAEA,SAAKR,OAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAUF,QAAAA,SAAS,EAAEK;AAArB,OAAP;;AAEJ,SAAKV,MAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAUF,QAAAA,SAAS,EAACA,SAAS,CAACM,MAAV,CAAiB,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAYA,EAAE,KAAKF,OAAO,CAACE,EAA5C;AAApB,OAAP;AAEA;AACA;AACA;AACA;;AAGA,SAAKT,MAAL;AACI,aAAOI,KAAK,CAACM,GAAN,CAAWC,QAAD,IAAc;AAC3B,YAAIP,KAAK,CAACK,EAAN,KAAaF,OAAO,CAACE,EAAzB,EAA6B;AACzB,iBAAO,EACH,GAAGE,QADA;AAEH,eAAGJ;AAFA,WAAP;AAIH,SALD,MAKO;AACH,iBAAOI,QAAP;AACH;AACJ,OATM,CAAP;;AAUR;AAAQ,aAAOP,KAAP;AA3BZ;AA6BH,CAhCM","sourcesContent":["import {DELETE, GET_ALL, POST, UPDATE} from \"./types\";\r\n\r\nconst initialState={\r\n\r\n    employees:[]\r\n}\r\nexport const postsReducer = (state= initialState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (action.type){\r\n        // case POST:\r\n        //     return {...state,posts: state.posts.concat([action.payload])}\r\n\r\n        case GET_ALL:\r\n            return {...state,employees: payload}\r\n\r\n        case DELETE:\r\n            return {...state,employees:employees.filter(({ id }) => id !== payload.id)};\r\n\r\n            // EmployeeService.deleteEmployee(id).then(res=>{\r\n            //     this.setState({employees:this.state.employees.filter(employee=>employee.id!==id)})\r\n            // });\r\n            //\r\n\r\n\r\n            case UPDATE :\r\n                return state.map((tutorial) => {\r\n                    if (state.id === payload.id) {\r\n                        return {\r\n                            ...tutorial,\r\n                            ...payload,\r\n                        };\r\n                    } else {\r\n                        return tutorial;\r\n                    }\r\n                });\r\n        default:return state\r\n    }\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}