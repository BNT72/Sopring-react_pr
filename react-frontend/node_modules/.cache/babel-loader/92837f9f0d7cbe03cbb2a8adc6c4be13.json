{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valzhanov\\\\Desktop\\\\test\\\\Spring-backend\\\\src\\\\main\\\\resources\\\\react-frontend\\\\src\\\\components\\\\ListIssueComponent.js\";\nimport React, { Component } from 'react';\nimport { Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { deleteIssue, fetchPosts, GetUser } from \"../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListIssueComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.addEmployee = this.addEmployee.bind(this);\n    this.editEmployee = this.editEmployee.bind(this);\n    this.viewEmployee = this.viewEmployee.bind(this);\n    this.props.fetchPosts();\n    this.props.GetUser();\n  } // componentDidMount() {\n  //     EmployeeService.getEmployees().then((res) => {\n  //         this.setState({employees: res.data})\n  //\n  //     });\n  //\n  // }\n\n\n  addEmployee() {\n    this.props.history.push('/add-employee/_add');\n  }\n\n  editEmployee(id) {\n    // console.log(`/employees/${id}`)\n    this.props.history.push(`/add-employee/${id}`);\n  }\n\n  viewEmployee(id) {\n    // this.props.ViewEmployee(id)\n    this.props.history.push(`/view-employee/${id}`);\n  }\n\n  render() {\n    console.log(this.props.user.id);\n\n    if (!this.props.user.id) {\n      // Супер костыль //\n      // Авторизация проходит только на порту 8081, если пользователь не авторизован появляеться ссылка на порт спринга\n      //  где проходит авторизация и в дальнейшем редиректит обратно на порт 3000\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://localhost:8081/back\",\n        children: \" Hello user! You need to log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"Employee List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: this.addEmployee,\n            children: \"Add employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped table-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Descriptions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Author\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.props.employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: employee.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: employee.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: employee.descriptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: employee.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: employee.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => this.props.deleteIssue(employee.id),\n                    className: \"btn btn-danger m-1\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => this.viewEmployee(employee.id),\n                    className: \"btn btn-success m-1\",\n                    children: \"View\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 45\n                }, this)]\n              }, employee.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nconst mapDispatchToProps = {\n  fetchPosts,\n  deleteIssue,\n  GetUser\n};\n\nconst mapStateToProps = sate => ({\n  employees: sate.posts.employees,\n  user: sate.users.user\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListIssueComponent);","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/Spring-backend/src/main/resources/react-frontend/src/components/ListIssueComponent.js"],"names":["React","Component","Row","connect","deleteIssue","fetchPosts","GetUser","ListIssueComponent","constructor","props","addEmployee","bind","editEmployee","viewEmployee","history","push","id","render","console","log","user","employees","map","employee","name","status","descriptions","author","date","mapDispatchToProps","mapStateToProps","sate","posts","users"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Row} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteIssue, fetchPosts, GetUser} from \"../redux/actions\";\r\n\r\nclass ListIssueComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addEmployee = this.addEmployee.bind(this)\r\n        this.editEmployee = this.editEmployee.bind(this)\r\n        this.viewEmployee = this.viewEmployee.bind(this)\r\n\r\n        this.props.fetchPosts();\r\n        this.props.GetUser();\r\n\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     EmployeeService.getEmployees().then((res) => {\r\n    //         this.setState({employees: res.data})\r\n    //\r\n    //     });\r\n    //\r\n    // }\r\n\r\n    addEmployee() {\r\n        this.props.history.push('/add-employee/_add')\r\n    }\r\n\r\n\r\n    editEmployee(id) {\r\n        // console.log(`/employees/${id}`)\r\n\r\n        this.props.history.push(`/add-employee/${id}`)\r\n    }\r\n\r\n\r\n    viewEmployee(id) {\r\n        // this.props.ViewEmployee(id)\r\n        this.props.history.push(`/view-employee/${id}`)\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.user.id)\r\n\r\n        if(!this.props.user.id)\r\n        {\r\n            // Супер костыль //\r\n            // Авторизация проходит только на порту 8081, если пользователь не авторизован появляеться ссылка на порт спринга\r\n            //  где проходит авторизация и в дальнейшем редиректит обратно на порт 3000\r\n            return  <a href={\"http://localhost:8081/back\"}> Hello user! You need to log in</a>\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n\r\n\r\n                    <h2 className={\"text-center\"}>Employee List</h2>\r\n                    <Row>\r\n                        <button className={\"btn btn-primary\"} onClick={this.addEmployee}>Add employee</button>\r\n                    </Row>\r\n                    <Row>\r\n                        <table className={\"table table-striped table-bordered\"}>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Status</th>\r\n                                <th>Descriptions</th>\r\n                                <th>Author</th>\r\n                                <th>Date</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                            {\r\n                                this.props.employees.map(\r\n                                    employee =>\r\n                                        <tr key={employee.id}>\r\n                                            <td>{employee.name}</td>\r\n                                            <td>{employee.status}</td>\r\n                                            <td>{employee.descriptions}</td>\r\n                                            <td>{employee.author}</td>\r\n                                            <td>{employee.date}</td>\r\n                                            <td>\r\n                                                {/*<button onClick={() => this.editEmployee(employee.id)}*/}\r\n                                                {/*        className={\"btn btn-info m-1\"}>Update*/}\r\n                                                {/*</button>*/}\r\n\r\n                                                <button onClick={() => this.props.deleteIssue(employee.id)}\r\n                                                        className={\"btn btn-danger m-1\"}>Delete\r\n                                                </button>\r\n                                                <button onClick={() => this.viewEmployee(employee.id)}\r\n                                                        className={\"btn btn-success m-1\"}>View\r\n                                                </button>\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                            </tbody>\r\n\r\n                        </table>\r\n\r\n                    </Row>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    fetchPosts, deleteIssue,GetUser\r\n}\r\n\r\nconst mapStateToProps = sate => ({\r\n    employees: sate.posts.employees,\r\n    user: sate.users.user\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListIssueComponent);"]},"metadata":{},"sourceType":"module"}