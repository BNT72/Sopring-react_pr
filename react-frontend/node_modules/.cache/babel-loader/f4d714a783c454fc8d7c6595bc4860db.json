{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valzhanov\\\\Desktop\\\\test\\\\Spring-backend\\\\src\\\\main\\\\resources\\\\react-frontend\\\\src\\\\components\\\\CreateComment.js\";\nimport React, { Component } from 'react';\nimport { Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { SaveComment, ViewIssue } from \"../redux/actions\";\nimport { maxLengthCreator, required } from \"../validations/validatiors\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { renderField } from \"../validations/renderField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateComment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeStatusHandler = event => {\n      this.setState({\n        status: event.target.value\n      });\n    };\n\n    this.changeTextHandler = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.changeAuthorHandler = event => {\n      this.setState({\n        author: event.target.value\n      });\n    };\n\n    this.saveComment = e => {\n      e.preventDefault();\n      let comment = {\n        author: this.state.author,\n        status: this.state.status,\n        text: this.state.text\n      };\n      this.props.SaveComment(this.props.id, comment);\n      this.props.employee.status = comment.status;\n      this.setState({\n        author: \"\",\n        status: \"\",\n        text: \"\"\n      });\n    };\n\n    this.state = {\n      id: \"\",\n      status: \"\",\n      text: \"\",\n      author: \"\"\n    };\n    this.changeStatusHandler = this.changeStatusHandler.bind(this);\n    this.changeTextHandler = this.changeTextHandler.bind(this);\n    this.changeAuthorHandler = this.changeAuthorHandler.bind(this);\n    this.saveComment = this.saveComment.bind(this); // console.log(this.props.id)\n  }\n\n  render() {\n    const onSubmit = formData => {\n      console.log(formData);\n      this.props.SaveComment(formData);\n      this.props.employee.status = formData.status;\n    };\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"col-md-6 offset-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = {\n  SaveComment,\n  ViewIssue\n};\n\nconst mapStateToProps = sate => ({\n  employee: sate.posts.employee\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateComment);\nconst maxLength = maxLengthCreator(30);\nconst maxDescriptions = maxLengthCreator(250);\n\nconst Form = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          component: renderField,\n          type: \"text\",\n          label: \"Author\",\n          name: \"author\",\n          validate: [required, maxLength]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          component: renderField,\n          type: \"text\",\n          label: \"Status\",\n          name: \"status\",\n          validate: [required, maxLength]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-2\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: renderField,\n        label: \"Text\",\n        name: \"text\",\n        validate: [required, maxDescriptions]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Form;\nconst CommentReduxForm = reduxForm({\n  form: 'Comment'\n})(Form);\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/Spring-backend/src/main/resources/react-frontend/src/components/CreateComment.js"],"names":["React","Component","Card","connect","SaveComment","ViewIssue","maxLengthCreator","required","Field","reduxForm","renderField","CreateComment","constructor","props","changeStatusHandler","event","setState","status","target","value","changeTextHandler","text","changeAuthorHandler","author","saveComment","e","preventDefault","comment","state","id","employee","bind","render","onSubmit","formData","console","log","mapDispatchToProps","mapStateToProps","sate","posts","maxLength","maxDescriptions","Form","handleSubmit","CommentReduxForm","form"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Card} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {SaveComment, ViewIssue} from \"../redux/actions\";\r\nimport {maxLengthCreator, required} from \"../validations/validatiors\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {renderField} from \"../validations/renderField\";\r\n\r\nclass CreateComment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            status: \"\",\r\n            text: \"\",\r\n            author: \"\",\r\n\r\n        }\r\n\r\n\r\n        this.changeStatusHandler = this.changeStatusHandler.bind(this)\r\n        this.changeTextHandler = this.changeTextHandler.bind(this)\r\n        this.changeAuthorHandler = this.changeAuthorHandler.bind(this)\r\n        this.saveComment = this.saveComment.bind(this)\r\n\r\n        // console.log(this.props.id)\r\n    }\r\n\r\n\r\n    changeStatusHandler = (event) => {\r\n        this.setState({status: event.target.value})\r\n    };\r\n    changeTextHandler = (event) => {\r\n        this.setState({text: event.target.value})\r\n    };\r\n    changeAuthorHandler = (event) => {\r\n        this.setState({author: event.target.value})\r\n    };\r\n\r\n\r\n    saveComment = (e) => {\r\n        e.preventDefault();\r\n\r\n        let comment = {\r\n            author: this.state.author,\r\n            status: this.state.status,\r\n            text: this.state.text\r\n\r\n        }\r\n\r\n\r\n        this.props.SaveComment(this.props.id, comment);\r\n       this.props.employee.status=comment.status;\r\n\r\n       this.setState({author:\"\",status:\"\",text:\"\"})\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const onSubmit = (formData) => {\r\n            console.log(formData)\r\n            this.props.SaveComment(formData);\r\n            this.props.employee.status=formData.status;\r\n          \r\n        }\r\n        return (\r\n            <Card className={\"col-md-6 offset-md-3\"}>\r\n                <h3 className={\"text-center\"}>Add Comment</h3>\r\n                <div className={\"card-body\"}>\r\n                    <Form onSubmit={onSubmit}/>\r\n                    {/*<form>*/}\r\n                    {/*    <div className={\"form-group\"}>*/}\r\n                    {/*        <label>Author</label>*/}\r\n                    {/*        <input placeholder={\"Author\"} name={\"author\"} className={\"form-control\"}*/}\r\n                    {/*               value={this.state.author}*/}\r\n                    {/*               onChange={this.changeAuthorHandler}*/}\r\n                    {/*        />*/}\r\n                    {/*    </div>*/}\r\n\r\n                    {/*    <div className={\"form-group\"}>*/}\r\n                    {/*        <label>Status</label>*/}\r\n                    {/*        <input placeholder={\"Status\"} name={\"status\"} className={\"form-control\"}*/}\r\n                    {/*               value={this.state.status}*/}\r\n                    {/*               onChange={this.changeStatusHandler}*/}\r\n                    {/*        />*/}\r\n                    {/*    </div>*/}\r\n\r\n                    {/*    <div className={\"form-group mb-2\"}>*/}\r\n                    {/*        <label>Text</label>*/}\r\n                    {/*        <input placeholder={\"Text\"} name={\"text\"} className={\"form-control\"}*/}\r\n                    {/*               value={this.state.text}*/}\r\n                    {/*               onChange={this.changeTextHandler}*/}\r\n                    {/*        />*/}\r\n                    {/*    </div>*/}\r\n                    {/*    <button className={\"btn btn-success\"} onClick={this.saveComment}>Save</button>*/}\r\n                    {/*</form>*/}\r\n\r\n                </div>\r\n\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    SaveComment, ViewIssue\r\n}\r\n\r\nconst mapStateToProps = sate => ({\r\n    employee: sate.posts.employee\r\n\r\n\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateComment);\r\n\r\n\r\n\r\nconst maxLength=maxLengthCreator(30)\r\nconst maxDescriptions=maxLengthCreator(250)\r\n\r\nconst Form = (props) => {\r\n\r\n    return (\r\n        <form  onSubmit={props.handleSubmit}>\r\n            <div className={\"form-group\"}>\r\n                <div className={\"form-group mb-2\"}>\r\n\r\n                    <Field component={renderField} type={\"text\"} label={\"Author\"} name={\"author\"}\r\n                           validate={[required,maxLength]}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"form-group\"}>\r\n                <div className={\"form-group\"}>\r\n\r\n                    <Field component={renderField} type={\"text\"} label={\"Status\"} name={\"status\"}\r\n                           validate={[required,maxLength]}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"form-group mb-2\"}>\r\n\r\n                <Field component={renderField} label={\"Text\"} name={\"text\"}\r\n                       validate={[required,maxDescriptions]}\r\n                />\r\n            </div>\r\n\r\n\r\n            <button className={\"btn btn-success\"}>Save</button>\r\n\r\n        </form>\r\n\r\n   )\r\n}\r\n\r\nconst CommentReduxForm = reduxForm({form: 'Comment'})(Form)\r\n"]},"metadata":{},"sourceType":"module"}