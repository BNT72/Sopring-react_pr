{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valzhanov\\\\Desktop\\\\test\\\\Spring-backend\\\\src\\\\main\\\\resources\\\\react-frontend\\\\src\\\\components\\\\CreateIssueComponent.js\";\nimport React, { Component } from 'react';\nimport { Card } from \"react-bootstrap\";\nimport { createIssue, fetchPosts } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../validations/validatiors\";\nimport { renderField, renderFieldTextarea } from \"../validations/renderField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateIssueComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.cancel = () => {\n      this.props.history.push('/employees');\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      name: \"\",\n      status: \"\",\n      descriptions: \"\",\n      author: \"\"\n    };\n  }\n\n  render() {\n    const onSubmit = formData => {\n      console.log(formData);\n      this.props.createIssue(formData);\n      this.props.history.push('/employees');\n      this.props.fetchPosts();\n    };\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"col-md-6 offset-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(IssueReduxForm, {\n          onSubmit: onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger m-2\",\n        onClick: this.cancel.bind(this),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = {\n  fetchPosts,\n  createIssue\n};\nexport default connect(null, mapDispatchToProps)(CreateIssueComponent);\nconst maxLength = maxLengthCreator(30);\nconst maxDescriptions = maxLengthCreator(250);\n\nconst Form = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: renderField,\n        type: \"text\",\n        label: \"Name\",\n        name: \"name\",\n        validate: [required, maxLength]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: renderField,\n        type: \"text\",\n        label: \"Status\",\n        name: \"status\",\n        validate: [required, maxLength]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-2\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: renderFieldTextarea,\n        type: \"text\",\n        label: \"Descriptions\",\n        name: \"descriptions\",\n        validate: [required, maxDescriptions]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-2\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: renderField,\n        type: \"text\",\n        label: \"Author\",\n        name: \"author\",\n        validate: [required, maxLength]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }, this);\n};\n\n_c = Form;\nconst IssueReduxForm = reduxForm({\n  form: 'Issue'\n})(Form);\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/Spring-backend/src/main/resources/react-frontend/src/components/CreateIssueComponent.js"],"names":["React","Component","Card","createIssue","fetchPosts","connect","Field","reduxForm","maxLengthCreator","required","renderField","renderFieldTextarea","CreateIssueComponent","constructor","props","cancel","history","push","state","id","match","params","name","status","descriptions","author","render","onSubmit","formData","console","log","bind","mapDispatchToProps","maxLength","maxDescriptions","Form","handleSubmit","IssueReduxForm","form"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Card} from \"react-bootstrap\";\r\nimport {createIssue, fetchPosts} from \"../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../validations/validatiors\";\r\nimport {renderField, renderFieldTextarea} from \"../validations/renderField\";\r\n\r\nclass CreateIssueComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            name: \"\",\r\n            status: \"\",\r\n            descriptions: \"\",\r\n            author: \"\"\r\n        }\r\n\r\n    }\r\n\r\n\r\n    cancel = () => {\r\n        this.props.history.push('/employees')\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const onSubmit = (formData) => {\r\n            console.log(formData)\r\n            this.props.createIssue(formData);\r\n            this.props.history.push('/employees')\r\n            this.props.fetchPosts();\r\n        }\r\n\r\n        return (\r\n            <Card className={\"col-md-6 offset-md-3\"}>\r\n                <h3 className={\"text-center\"}>Add Employee</h3>\r\n                <div className={\"card-body\"}>\r\n                    <IssueReduxForm onSubmit={onSubmit}/>\r\n\r\n                </div>\r\n                <button className={\"btn btn-danger m-2\"}\r\n                        onClick={this.cancel.bind(this)}\r\n                >Cancel\r\n                </button>\r\n            </Card>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    fetchPosts, createIssue\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateIssueComponent);\r\n\r\n\r\n\r\n\r\n\r\nconst maxLength=maxLengthCreator(30)\r\nconst maxDescriptions=maxLengthCreator(250)\r\n\r\nconst Form = (props) => {\r\n\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <div className={\"form-group\"}>\r\n\r\n            <Field component={renderField} type={\"text\"} label={\"Name\"}  name={\"name\"}\r\n                   validate={[required,maxLength]}/>\r\n        </div>\r\n\r\n        <div className={\"form-group\"}>\r\n\r\n            <Field component={renderField} type={\"text\"} label={\"Status\"} name={\"status\"}\r\n                   validate={[required,maxLength]}\r\n            />\r\n        </div>\r\n\r\n        <div className={\"form-group mb-2\"}>\r\n\r\n            <Field component={renderFieldTextarea} type={\"text\"} label={\"Descriptions\"} name={\"descriptions\"}\r\n                   validate={[required,maxDescriptions]}\r\n            />\r\n        </div>\r\n        <div className={\"form-group mb-2\"}>\r\n\r\n            <Field component={renderField} type={\"text\"} label={\"Author\"} name={\"author\"}\r\n                   validate={[required,maxLength]}\r\n            />\r\n        </div>\r\n\r\n\r\n\r\n    </form>)\r\n}\r\n\r\nconst IssueReduxForm = reduxForm({form: 'Issue'})(Form)"]},"metadata":{},"sourceType":"module"}