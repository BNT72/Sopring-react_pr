{"ast":null,"code":"import { DELETE, GET_ALL, GET_USER, POST, POSTCOMMENT, UPDATE, VIEW } from \"./types\";\nimport axios from \"axios\";\nimport { reset } from \"redux-form\";\nconst EMPLOYEE_API_BASE_URL = \"/api/employees\";\nexport const createIssue = issue => async dispatch => {\n  try {\n    await axios.post(EMPLOYEE_API_BASE_URL, issue);\n    await dispatch({\n      type: POST,\n      payload: issue\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const fetchPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(EMPLOYEE_API_BASE_URL);\n    await dispatch({\n      type: GET_ALL,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteIssue = id => async dispatch => {\n  try {\n    await axios.delete(EMPLOYEE_API_BASE_URL + \"/\" + id);\n    await dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const ViewIssue = id => async dispatch => {\n  // try {\n  const res = await axios.get(EMPLOYEE_API_BASE_URL + \"/\" + id);\n  await dispatch({\n    type: VIEW,\n    payload: res.data\n  }); // } catch (err) {\n  //     console.log(err);\n  // }\n};\nexport const SaveComment = (id, comment) => async dispatch => {\n  await axios.post(EMPLOYEE_API_BASE_URL + \"/\" + id, comment);\n  dispatch(reset('Comment'));\n  dispatch({\n    type: POSTCOMMENT,\n    payload: comment\n  });\n};\nexport const GetUser = () => async dispatch => {\n  const user = await axios.get(\"/usr\");\n  await dispatch({\n    type: GET_USER,\n    payload: user.data\n  });\n}; // export const updateIssue = (id, data) => async (dispatch) => {\n//     try {\n//\n//         const res = await  axios.put(EMPLOYEE_API_BASE_URL + \"/\" + id, data)\n//\n//\n//         await  dispatch({\n//             type: UPDATE,\n//             payload: id, data\n//         });\n//\n//         return Promise.resolve(res.data);\n//     } catch (err) {\n//         return Promise.reject(err);\n//     }\n// };","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/Spring-backend/src/main/resources/react-frontend/src/redux/actions.js"],"names":["DELETE","GET_ALL","GET_USER","POST","POSTCOMMENT","UPDATE","VIEW","axios","reset","EMPLOYEE_API_BASE_URL","createIssue","issue","dispatch","post","type","payload","err","console","log","fetchPosts","res","get","data","deleteIssue","id","delete","ViewIssue","SaveComment","comment","GetUser","user"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,IAAnC,EAAyCC,WAAzC,EAAsDC,MAAtD,EAA8DC,IAA9D,QAAyE,SAAzE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,YAApB;AAEA,MAAMC,qBAAqB,GAAG,gBAA9B;AAGA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,MAAOC,QAAP,IAAoB;AACtD,MAAI;AACA,UAAML,KAAK,CAACM,IAAN,CAAWJ,qBAAX,EAAkCE,KAAlC,CAAN;AAEA,UAAMC,QAAQ,CAAC;AACXE,MAAAA,IAAI,EAAEX,IADK;AAEXY,MAAAA,OAAO,EAAEJ;AAFE,KAAD,CAAd;AAIH,GAPD,CAOE,OAAOK,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CAXM;AAaP,OAAO,MAAMG,UAAU,GAAG,MAAM,MAAOP,QAAP,IAAoB;AAChD,MAAI;AACA,UAAMQ,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUZ,qBAAV,CAAlB;AAGA,UAAOG,QAAQ,CAAC;AACZE,MAAAA,IAAI,EAAEb,OADM;AAEZc,MAAAA,OAAO,EAAEK,GAAG,CAACE;AAFD,KAAD,CAAf;AAIH,GARD,CAQE,OAAON,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CAZM;AAeP,OAAO,MAAMO,WAAW,GAAIC,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AAEnD,MAAI;AACA,UAAML,KAAK,CAACkB,MAAN,CAAahB,qBAAqB,GAAG,GAAxB,GAA8Be,EAA3C,CAAN;AAEA,UAAQZ,QAAQ,CAAC;AACbE,MAAAA,IAAI,EAAEd,MADO;AAEbe,MAAAA,OAAO,EAAES;AAFI,KAAD,CAAhB;AAIH,GAPD,CAOE,OAAOR,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AAGJ,CAdM;AAkBP,OAAO,MAAMU,SAAS,GAAGF,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AAEhD;AACA,QAAMQ,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUZ,qBAAqB,GAAG,GAAxB,GAA8Be,EAAxC,CAAlB;AAEA,QAAMZ,QAAQ,CAAC;AACXE,IAAAA,IAAI,EAAER,IADK;AAEXS,IAAAA,OAAO,EAAEK,GAAG,CAACE;AAFF,GAAD,CAAd,CALgD,CAShD;AACA;AACA;AAGH,CAdM;AAgBP,OAAO,MAAMK,WAAW,GAAG,CAACH,EAAD,EAAKI,OAAL,KAAiB,MAAOhB,QAAP,IAAoB;AAC5D,QAAML,KAAK,CAACM,IAAN,CAAWJ,qBAAqB,GAAG,GAAxB,GAA8Be,EAAzC,EAA6CI,OAA7C,CAAN;AAGAhB,EAAAA,QAAQ,CAACJ,KAAK,CAAC,SAAD,CAAN,CAAR;AAECI,EAAAA,QAAQ,CAAC;AACNE,IAAAA,IAAI,EAAEV,WADA;AAENW,IAAAA,OAAO,EAAEa;AAFH,GAAD,CAAR;AAKJ,CAXM;AAaP,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAOjB,QAAP,IAAoB;AAC7C,QAAMkB,IAAI,GAAE,MAAMvB,KAAK,CAACc,GAAN,CAAW,MAAX,CAAlB;AAGA,QAAMT,QAAQ,CAAC;AACXE,IAAAA,IAAI,EAAEZ,QADK;AAEXa,IAAAA,OAAO,EAAEe,IAAI,CAACR;AAFH,GAAD,CAAd;AAIH,CARM,C,CAWP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {DELETE, GET_ALL, GET_USER, POST, POSTCOMMENT, UPDATE, VIEW} from \"./types\";\r\nimport axios from \"axios\";\r\nimport {reset} from \"redux-form\";\r\n\r\nconst EMPLOYEE_API_BASE_URL = \"/api/employees\"\r\n\r\n\r\nexport const createIssue = (issue) => async (dispatch) => {\r\n    try {\r\n        await axios.post(EMPLOYEE_API_BASE_URL, issue);\r\n\r\n        await dispatch({\r\n            type: POST,\r\n            payload: issue,\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const fetchPosts = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(EMPLOYEE_API_BASE_URL);\r\n\r\n\r\n        await  dispatch({\r\n            type: GET_ALL,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\n\r\nexport const deleteIssue = (id) => async (dispatch) => {\r\n\r\n    try {\r\n        await axios.delete(EMPLOYEE_API_BASE_URL + \"/\" + id);\r\n\r\n        await   dispatch({\r\n            type: DELETE,\r\n            payload: id\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport const ViewIssue= (id) => async (dispatch) => {\r\n\r\n    // try {\r\n    const res = await axios.get(EMPLOYEE_API_BASE_URL + \"/\" + id);\r\n\r\n    await dispatch({\r\n        type: VIEW,\r\n        payload: res.data\r\n    });\r\n    // } catch (err) {\r\n    //     console.log(err);\r\n    // }\r\n\r\n\r\n}\r\n\r\nexport const SaveComment = (id, comment) => async (dispatch) => {\r\n    await axios.post(EMPLOYEE_API_BASE_URL + \"/\" + id, comment);\r\n\r\n\r\n    dispatch(reset('Comment'));\r\n\r\n     dispatch({\r\n        type: POSTCOMMENT,\r\n        payload: comment\r\n    });\r\n\r\n}\r\n\r\nexport const GetUser = () => async (dispatch) => {\r\n    const user= await axios.get( \"/usr\");\r\n\r\n\r\n    await dispatch({\r\n        type: GET_USER,\r\n        payload: user.data\r\n    });\r\n}\r\n\r\n\r\n// export const updateIssue = (id, data) => async (dispatch) => {\r\n//     try {\r\n//\r\n//         const res = await  axios.put(EMPLOYEE_API_BASE_URL + \"/\" + id, data)\r\n//\r\n//\r\n//         await  dispatch({\r\n//             type: UPDATE,\r\n//             payload: id, data\r\n//         });\r\n//\r\n//         return Promise.resolve(res.data);\r\n//     } catch (err) {\r\n//         return Promise.reject(err);\r\n//     }\r\n// };"]},"metadata":{},"sourceType":"module"}