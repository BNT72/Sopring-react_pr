{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valzhanov\\\\Desktop\\\\test\\\\Spring-backend\\\\src\\\\main\\\\resources\\\\react-frontend\\\\src\\\\components\\\\ListIssueComponent.js\";\nimport '../App.css';\nimport React, { Component } from 'react';\nimport { Container, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { deleteIssue, fetchPosts, GetUser } from \"../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ListIssueComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.addEmployee = this.addEmployee.bind(this);\n    this.viewEmployee = this.viewEmployee.bind(this); // this.props.GetUser();\n\n    this.props.fetchPosts();\n  } // componentDidMount() {\n  //     EmployeeService.getEmployees().then((res) => {\n  //         this.setState({employees: res.data})\n  //\n  //     });\n  //\n  // }\n\n\n  addEmployee() {\n    this.props.history.push('/add-employee/_add');\n  }\n\n  viewEmployee(id) {\n    // this.props.ViewEmployee(id)\n    this.props.history.push(`/view-employee/${id}`);\n  }\n\n  render() {\n    function colorStatus(status) {\n      switch (status) {\n        case \"Created\":\n          return /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"text-success\",\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 39\n          }, this);\n\n        case \"In the process\":\n          return /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"text-warning\",\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 46\n          }, this);\n\n        case \"Closed\":\n          return /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"text-danger\",\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 38\n          }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Employee List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \" p-3}\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: this.addEmployee,\n            children: \"Add employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), this.props.employees.map(employee => /*#__PURE__*/_jsxDEV(Row, {\n          className: \"border  my-1 p-1 rounded\",\n          children: [colorStatus(employee.status), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hover\",\n            onClick: () => this.viewEmployee(employee.id),\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"by: \", employee.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"#\", employee.id, \"  Opened \", employee.date, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"\",\n                height: 20,\n                src: \"https://image.flaticon.com/icons/png/512/3096/3096673.png\",\n                onClick: () => this.props.deleteIssue(employee.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 45\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 41\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapDispatchToProps = {\n  fetchPosts,\n  deleteIssue,\n  GetUser\n};\n\nconst mapStateToProps = sate => ({\n  employees: sate.posts.employees,\n  user: sate.users.user\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListIssueComponent);","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/Spring-backend/src/main/resources/react-frontend/src/components/ListIssueComponent.js"],"names":["React","Component","Container","Row","connect","deleteIssue","fetchPosts","GetUser","ListIssueComponent","constructor","props","addEmployee","bind","viewEmployee","history","push","id","render","colorStatus","status","employees","map","employee","name","author","date","mapDispatchToProps","mapStateToProps","sate","posts","user","users"],"mappings":"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","sourcesContent":["import '../App.css';\r\nimport React, {Component} from 'react';\r\nimport {Container, Row} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteIssue, fetchPosts, GetUser} from \"../redux/actions\";\r\n\r\nclass ListIssueComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addEmployee = this.addEmployee.bind(this)\r\n\r\n        this.viewEmployee = this.viewEmployee.bind(this)\r\n\r\n        // this.props.GetUser();\r\n        this.props.fetchPosts();\r\n\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     EmployeeService.getEmployees().then((res) => {\r\n    //         this.setState({employees: res.data})\r\n    //\r\n    //     });\r\n    //\r\n    // }\r\n\r\n    addEmployee() {\r\n        this.props.history.push('/add-employee/_add')\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    viewEmployee(id) {\r\n        // this.props.ViewEmployee(id)\r\n        this.props.history.push(`/view-employee/${id}`)\r\n    }\r\n\r\n    render() {\r\n\r\n        function colorStatus(status) {\r\n            switch (status){\r\n\r\n                case \"Created\":return <b className={\"text-success\"}>{status}</b>\r\n                case \"In the process\":return <b className={\"text-warning\"}>{status}</b>\r\n                case \"Closed\":return <b className={\"text-danger\"}>{status}</b>\r\n            }\r\n        }\r\n\r\n        return (\r\n                <>\r\n\r\n\r\n                    <h2 className={\"text-center\"}>Employee List</h2>\r\n                    <Container>\r\n                    <Row className={\" p-3}\"}>\r\n                        <button className={\"btn btn-primary\"} onClick={this.addEmployee}>Add employee</button>\r\n                    </Row>\r\n\r\n\r\n                            {\r\n                                this.props.employees.map(\r\n                                    employee =>\r\n                                        <Row className={\"border  my-1 p-1 rounded\"} key={employee.id} >\r\n                                            {colorStatus(employee.status)}\r\n                                            <span className={\"hover\"} onClick={() => this.viewEmployee(employee.id)}>{employee.name}</span>\r\n\r\n\r\n\r\n                                            <div>by: {employee.author}</div>\r\n                                            <div >#{employee.id}  Opened {employee.date}\r\n\r\n                                              <span className={\"text-right\"}>\r\n                                                    <img className={\"\"} height={20} src={\"https://image.flaticon.com/icons/png/512/3096/3096673.png\"}\r\n                                                         onClick={() => this.props.deleteIssue(employee.id)}/>\r\n                                                </span>\r\n                                            </div>\r\n\r\n\r\n                                        </Row>\r\n                                )\r\n                            }\r\n\r\n                    </Container>\r\n                </>\r\n            );\r\n        }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    fetchPosts, deleteIssue,GetUser\r\n}\r\n\r\nconst mapStateToProps = sate => ({\r\n    employees: sate.posts.employees,\r\n    user: sate.users.user\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListIssueComponent);"]},"metadata":{},"sourceType":"module"}