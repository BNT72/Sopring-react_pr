{"ast":null,"code":"import { DELETE, GET_ALL, POST, UPDATE } from \"./types\";\nconst initialState = {\n  employees: []\n};\nexport const postsReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (action.type) {\n    // case POST:\n    //     return {...state,posts: state.posts.concat([action.payload])}\n    case GET_ALL:\n      return { ...state,\n        employees: payload\n      };\n\n    case DELETE:\n      // return {...state,employees:state.employees.filter(({ id }) => id !== payload.id)};\n      {\n        const {\n          index\n        } = action;\n        const notes = [];\n        state.notes.forEach((note, i) => {\n          if (index !== i) {\n            notes.push(note);\n          }\n        });\n        return {\n          notes\n        };\n      }\n    // case UPDATE :\n    //         return state.employees.map((employee) => {\n    //             if (state.id === payload.id) {\n    //                 return {\n    //                     ...employee,\n    //                     ...payload,\n    //                 };\n    //             } else {\n    //                 return employee;\n    //             }\n    //         });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/react-frontend/src/redux/postsReducer.js"],"names":["DELETE","GET_ALL","POST","UPDATE","initialState","employees","postsReducer","state","action","type","payload","index","notes","forEach","note","i","push"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,MAA/B,QAA4C,SAA5C;AAEA,MAAMC,YAAY,GAAC;AAEfC,EAAAA,SAAS,EAAC;AAFK,CAAnB;AAIA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAEH,YAAR,EAAsBI,MAAtB,KAAiC;AACzD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQA,MAAM,CAACC,IAAf;AACI;AACA;AAEA,SAAKR,OAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAUF,QAAAA,SAAS,EAAEK;AAArB,OAAP;;AAEJ,SAAKV,MAAL;AACI;AACJ;AACI,cAAM;AAAEW,UAAAA;AAAF,YAAYH,MAAlB;AACA,cAAMI,KAAK,GAAG,EAAd;AACAL,QAAAA,KAAK,CAACK,KAAN,CAAYC,OAAZ,CAAoB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC7B,cAAGJ,KAAK,KAAKI,CAAb,EAAgB;AACZH,YAAAA,KAAK,CAACI,IAAN,CAAWF,IAAX;AACH;AACJ,SAJD;AAKA,eAAO;AACHF,UAAAA;AADG,SAAP;AAEE;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAQ,aAAOL,KAAP;AAjCZ;AAmCH,CAtCM","sourcesContent":["import {DELETE, GET_ALL, POST, UPDATE} from \"./types\";\r\n\r\nconst initialState={\r\n\r\n    employees:[]\r\n}\r\nexport const postsReducer = (state= initialState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (action.type){\r\n        // case POST:\r\n        //     return {...state,posts: state.posts.concat([action.payload])}\r\n\r\n        case GET_ALL:\r\n            return {...state,employees: payload}\r\n\r\n        case DELETE:\r\n            // return {...state,employees:state.employees.filter(({ id }) => id !== payload.id)};\r\n        {\r\n            const { index } = action;\r\n            const notes = [];\r\n            state.notes.forEach((note, i) => {\r\n                if(index !== i) {\r\n                    notes.push(note)\r\n                }\r\n            })\r\n            return {\r\n                notes,\r\n            }}\r\n\r\n\r\n        // case UPDATE :\r\n        //         return state.employees.map((employee) => {\r\n        //             if (state.id === payload.id) {\r\n        //                 return {\r\n        //                     ...employee,\r\n        //                     ...payload,\r\n        //                 };\r\n        //             } else {\r\n        //                 return employee;\r\n        //             }\r\n        //         });\r\n        default:return state\r\n    }\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}