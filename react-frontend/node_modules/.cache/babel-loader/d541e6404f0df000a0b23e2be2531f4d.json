{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valzhanov\\\\Desktop\\\\test\\\\react-frontend\\\\src\\\\components\\\\ViewEmployeeComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, Row } from \"react-bootstrap\";\nimport { ViewEmployee } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ViewEmployeeComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      status: \"\",\n      author: \"\",\n      text: \"\"\n    };\n    this.props.ViewEmployee(this.props.match.params.id);\n  } // componentDidMount() {\n  //\n  //     // EmployeeService.getEmployeeById(this.state.id).then((res) => {\n  //     //\n  //     //     this.setState({employee: res.data})\n  //     // });\n  //\n  //\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"col-md-6 offset-md-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"View Employee Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [\"Name is \\xA0\", this.props.employee.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [\"Status is \\xA0\", this.props.employee.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [\"Descriptions is \\xA0\", this.props.employee.descriptions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [\"Author is \\xA0\", this.props.employee.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [\"Date is \\xA0\", this.props.employee.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped table-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Descriptions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.props.comments.map(comment => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: comment.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: comment.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: comment.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 41\n                }, this)]\n              }, comment.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapDispatchToProps = {\n  ViewEmployee\n};\n\nconst mapStateToProps = sate => ({\n  employee: sate.posts.employee,\n  comments: sate.posts.comments\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewEmployeeComponent);","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/react-frontend/src/components/ViewEmployeeComponent.js"],"names":["React","Component","Card","Row","ViewEmployee","connect","ViewEmployeeComponent","constructor","props","state","id","status","author","text","match","params","render","employee","name","descriptions","date","comments","map","comment","mapDispatchToProps","mapStateToProps","sate","posts"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Card, Row} from \"react-bootstrap\";\r\nimport {ViewEmployee} from \"../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ViewEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n            this.state = {\r\n                id: \"\",\r\n                status: \"\",\r\n                author: \"\",\r\n                text: \"\"\r\n            }\r\n\r\n        this.props.ViewEmployee(this.props.match.params.id);\r\n\r\n\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //\r\n    //     // EmployeeService.getEmployeeById(this.state.id).then((res) => {\r\n    //     //\r\n    //     //     this.setState({employee: res.data})\r\n    //     // });\r\n    //\r\n    //\r\n    // }\r\n\r\n    render() {\r\n\r\n        return (\r\n           <>\r\n            <Card className={\"col-md-6 offset-md-3\"}>\r\n                <h3>View Employee Details</h3>\r\n                <div className={\"card-body\"}>\r\n                    <Row>\r\n                        Name is &nbsp;\r\n                        {this.props.employee.name}\r\n                    </Row>\r\n                    <Row>\r\n                        Status is &nbsp;\r\n                        {this.props.employee.status}\r\n                    </Row>\r\n                    <Row>\r\n                        Descriptions is &nbsp;\r\n                        {this.props.employee.descriptions}\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        Author is &nbsp;\r\n                        {this.props.employee.author}\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        Date is &nbsp;\r\n                        {this.props.employee.date}\r\n                    </Row>\r\n\r\n                    <table className={\"table table-striped table-bordered\"}>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Status</th>\r\n                            <th>Descriptions</th>\r\n\r\n                        </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n\r\n                        {\r\n\r\n                            this.props.comments.map(\r\n                                comment =>\r\n\r\n                                    <tr key={comment.id}>\r\n                                        <td>{comment.status}</td>\r\n                                        <td>{comment.author}</td>\r\n                                        <td>{comment.text}</td>\r\n\r\n                                    </tr>\r\n                            )\r\n                        }\r\n\r\n                        </tbody>\r\n\r\n                    </table>\r\n                </div>\r\n\r\n            </Card>\r\n\r\n\r\n\r\n           </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    ViewEmployee\r\n}\r\nconst mapStateToProps = sate => ({\r\n    employee: sate.posts.employee,\r\n     comments: sate.posts.comments\r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewEmployeeComponent)"]},"metadata":{},"sourceType":"module"}