{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valzhanov\\\\Desktop\\\\test\\\\Spring-backend\\\\src\\\\main\\\\resources\\\\react-frontend\\\\src\\\\components\\\\IssueRoute.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { GetUser } from \"../redux/actions\";\nimport { Container } from \"react-bootstrap\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport ListIssueComponent from \"./ListIssueComponent\";\nimport CreateIssueComponent from \"./CreateIssueComponent\";\nimport ViewIssueComponent from \"./ViewIssueComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass IssueRoute extends Component {\n  constructor(props) {\n    super(props);\n    this.props.GetUser(); // console.log(this.props.user)\n  }\n\n  render() {\n    if (!this.props.user.id) {\n      // Супер костыль //\n      // Авторизация проходит только на порту 8081, если пользователь не авторизован появляеться ссылка на порт спринга\n      //  где проходит авторизация и в дальнейшем редиректит обратно на порт 3000\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://localhost:8081/back\",\n        children: \" Hello user! You need to log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\",\n                exact: true,\n                component: ListIssueComponent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/employees\",\n                component: ListIssueComponent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/add-employee/:id\",\n                component: CreateIssueComponent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/view-employee/:id\",\n                component: ViewIssueComponent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n}\n\nconst mapDispatchToProps = {\n  GetUser\n};\n\nconst mapStateToProps = sate => ({\n  user: sate.users.user\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueRoute);","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/Spring-backend/src/main/resources/react-frontend/src/components/IssueRoute.js"],"names":["React","Component","connect","GetUser","Container","Route","BrowserRouter","Router","Switch","ListIssueComponent","CreateIssueComponent","ViewIssueComponent","IssueRoute","constructor","props","render","user","id","mapDispatchToProps","mapStateToProps","sate","users"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,SAAQC,KAAR,EAAcC,aAAa,IAAIC,MAA/B,EAAuCC,MAAvC,QAAoD,kBAApD;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;;;AAEA,MAAMC,UAAN,SAAyBX,SAAzB,CAAmC;AAE/BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAGA,SAAKA,KAAL,CAAWX,OAAX,GAJe,CAKf;AAGH;;AAGDY,EAAAA,MAAM,GAAG;AAEL,QAAI,CAAC,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,EAArB,EAAyB;AACrB;AACA;AACA;AACA,0BAAQ;AAAG,QAAA,IAAI,EAAE,4BAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KALD,MAKO;AAEH,0BACI;AAAA,+BACI,QAAC,MAAD;AAAA,iCAGI,QAAC,SAAD;AAAW,YAAA,SAAS,EAAE,MAAtB;AAAA,mCACI,QAAC,MAAD;AAAA,sCACI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,GAAZ;AAAgB,gBAAA,KAAK,MAArB;AAAsB,gBAAA,SAAS,EAAER;AAAjC;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,YAAZ;AAAyB,gBAAA,SAAS,EAAEA;AAApC;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,mBAAZ;AAAgC,gBAAA,SAAS,EAAEC;AAA3C;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,oBAAZ;AAAiC,gBAAA,SAAS,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADJ,uBADJ;AAkBH;AACJ;;AAzC8B;;AA6CnC,MAAMO,kBAAkB,GAAG;AACvBf,EAAAA;AADuB,CAA3B;;AAIA,MAAMgB,eAAe,GAAGC,IAAI,KAAK;AAE7BJ,EAAAA,IAAI,EAAEI,IAAI,CAACC,KAAL,CAAWL;AAFY,CAAL,CAA5B;;AAKA,eAAed,OAAO,CAACiB,eAAD,EAAkBD,kBAAlB,CAAP,CAA6CN,UAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {GetUser} from \"../redux/actions\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport {Route,BrowserRouter as Router, Switch} from \"react-router-dom\";\r\nimport ListIssueComponent from \"./ListIssueComponent\";\r\nimport CreateIssueComponent from \"./CreateIssueComponent\";\r\nimport ViewIssueComponent from \"./ViewIssueComponent\";\r\n\r\nclass IssueRoute extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.props.GetUser();\r\n        // console.log(this.props.user)\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (!this.props.user.id) {\r\n            // Супер костыль //\r\n            // Авторизация проходит только на порту 8081, если пользователь не авторизован появляеться ссылка на порт спринга\r\n            //  где проходит авторизация и в дальнейшем редиректит обратно на порт 3000\r\n            return (<a href={\"http://localhost:8081/back\"}> Hello user! You need to log in</a>)\r\n        } else {\r\n\r\n            return (\r\n                <>\r\n                    <Router>\r\n\r\n\r\n                        <Container className={\"mt-3\"}>\r\n                            <Switch>\r\n                                <Route path=\"/\" exact component={ListIssueComponent}/>\r\n                                <Route path=\"/employees\" component={ListIssueComponent}/>\r\n                                <Route path=\"/add-employee/:id\" component={CreateIssueComponent}/>\r\n                                <Route path=\"/view-employee/:id\" component={ViewIssueComponent}/>\r\n                            </Switch>\r\n                        </Container>\r\n\r\n\r\n                    </Router>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    GetUser\r\n}\r\n\r\nconst mapStateToProps = sate => ({\r\n\r\n    user: sate.users.user\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueRoute);"]},"metadata":{},"sourceType":"module"}