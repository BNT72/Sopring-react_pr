{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valzhanov\\\\Desktop\\\\test\\\\Spring-backend\\\\src\\\\main\\\\resources\\\\react-frontend\\\\src\\\\components\\\\CreateComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { Card } from \"react-bootstrap\";\nimport { connect, useSelector } from \"react-redux\";\nimport { SaveComment } from \"../redux/actions\";\nimport { maxLengthCreator, required } from \"../validations/validatiors\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { renderFieldTextarea } from \"../validations/renderField\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateComment extends Component {\n  render() {\n    const onSubmit = formData => {\n      formData.author = this.props.user.name;\n      if (!formData.status) formData.status = this.props.employee.status;else this.props.employee.status = formData.status;\n      this.props.SaveComment(this.props.id, formData);\n    };\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mt-2 \",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(CommentReduxForm, {\n          onSubmit: onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = {\n  SaveComment\n};\n\nconst mapStateToProps = sate => ({\n  employee: sate.posts.employee,\n  user: sate.users.user\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateComment);\nconst maxDescriptions = maxLengthCreator(250);\n\nconst Form = props => {\n  _s();\n\n  const user = useSelector(state => {\n    return state.users.user;\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Author: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"status\",\n          component: \"select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"In the process\",\n            children: \"In the process\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Closed\",\n            children: \"Closed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-2\",\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: renderFieldTextarea,\n        label: \"Descriptions\",\n        name: \"text\",\n        validate: [required, maxDescriptions]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success m-1\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: '/'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger \",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"ODc3cjw/vvoWaLFqHWcEGODyOfo=\", false, function () {\n  return [useSelector];\n});\n\n_c = Form;\nconst CommentReduxForm = reduxForm({\n  form: 'Comment'\n})(Form);\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/valzhanov/Desktop/test/Spring-backend/src/main/resources/react-frontend/src/components/CreateComment.js"],"names":["React","Component","Card","connect","useSelector","SaveComment","maxLengthCreator","required","Field","reduxForm","renderFieldTextarea","Link","CreateComment","render","onSubmit","formData","author","props","user","name","status","employee","id","mapDispatchToProps","mapStateToProps","sate","posts","users","maxDescriptions","Form","state","handleSubmit","pathname","CommentReduxForm","form"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Card} from \"react-bootstrap\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {SaveComment} from \"../redux/actions\";\r\nimport {maxLengthCreator, required} from \"../validations/validatiors\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {renderFieldTextarea} from \"../validations/renderField\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass CreateComment extends Component {\r\n\r\n    render() {\r\n        const onSubmit = (formData) => {\r\n            formData.author = this.props.user.name\r\n\r\n            if (!formData.status) formData.status = this.props.employee.status\r\n            else   this.props.employee.status = formData.status;\r\n\r\n            this.props.SaveComment(this.props.id, formData);\r\n\r\n        }\r\n\r\n\r\n        return (\r\n            <Card className={\"mt-2 \"}>\r\n                <h3 className={\"text-center\"}>Add Comment</h3>\r\n                <div className={\"card-body\"}>\r\n                    <CommentReduxForm onSubmit={onSubmit}/>\r\n                </div>\r\n\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    SaveComment\r\n}\r\n\r\nconst mapStateToProps = sate => ({\r\n    employee: sate.posts.employee,\r\n    user: sate.users.user\r\n\r\n\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateComment);\r\n\r\n\r\nconst maxDescriptions = maxLengthCreator(250)\r\n\r\nconst Form = (props) => {\r\n\r\n    const user = useSelector(state => {\r\n        return state.users.user\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={\"form-group\"}>\r\n                <div className={\"form-group mb-2\"}>\r\n                    <label>Author: {user.name}</label>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"form-group\"}>\r\n                <div className={\"form-group\"}>\r\n                    <label>Status</label>\r\n                    <Field name=\"status\" component=\"select\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"In the process\">In the process</option>\r\n                        <option value=\"Closed\">Closed</option>\r\n                    </Field>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"form-group mb-2\"}>\r\n\r\n                <Field component={renderFieldTextarea} label={\"Descriptions\"} name={\"text\"}\r\n                       validate={[required, maxDescriptions]}\r\n                />\r\n            </div>\r\n\r\n\r\n            <button className={\"btn btn-success m-1\"}>Save</button>\r\n\r\n            <Link to={{pathname: '/'}}>\r\n                <button className={\"btn btn-danger \"}>Cancel</button>\r\n            </Link>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nconst CommentReduxForm = reduxForm({form: 'Comment'})(Form)\r\n"]},"metadata":{},"sourceType":"module"}